{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Disciplina de Estrutura de dados Avisos Trabalho 1 - 2019-06-15 23:59:59 - hor\u00e1rio de recebimento; Prova 1 - 2019-06-12 - 19:30h - 21:10h - At\u00e9 lista ligada. Instalando Python ; Professor Nome: Allan (Allainclair Flausino dos Santos) Email: allainclair@gmail.com Gradua\u00e7\u00e3o: Mestre em Ci\u00eancia da computa\u00e7\u00e3o Informa\u00e7\u00f5es profissionais : LinkeIn - https://www.linkedin.com/in/allainclair/ Disciplina Site: https://allainclair.github.io/disc-estrutura-dados/ ; c\u00f3digos: github.com/allainclair reposit\u00f3rio: disc-estrutura-dados; Local: E90, sala 05; Contato de turma: estatisticauem18@gmail.com. Avalia\u00e7\u00e3o (projeto) prova 1 [0-10] prova 2 [0-10] trabalho 1 [0-10] trabalho 2 [0-10] Nota final (NF) = (prova 1 + prova 2 + trabalho 1 + trabalho 2) / 4 Nota Exame (NE) M\u00e9dia final (MF) = (NF + NE) / 2 Python if NF >= 6.0 : print ( 'aprovado' ) elif MF >= 5.0 : print ( 'aprovado' ) else : print ( 'reprovado' ) Ementa Estudo de estruturas de dados para a representa\u00e7\u00e3o e manipula\u00e7\u00e3o de informa\u00e7\u00f5es. Estudo das estruturas de dados b\u00e1sicas: listas, \u00e1rvores e suas generaliza\u00e7\u00f5es. Objetivos Estudar as principais estruturas de dados: listas, \u00e1rvores e tabelas; Estudar os principais m\u00e9todos de busca e classifica\u00e7\u00e3o de dados; No\u00e7\u00f5es de complexidade de algoritmos; Estudo da modelagem de tipos abstratos de dados e objetivos; Estudo de modelo de organiza\u00e7\u00e3o de arquivos; Estudar e desenvolver programas em uma linguagem de alto n\u00edvel. Conte\u00fado Program\u00e1tico Conceitos b\u00e1sicos 1.1. Tipos Abstrato de Dados; 1.2. Estruturas de dados; 1.3. Formas de aloca\u00e7\u00e3o; 1.4. No\u00e7\u00f5es de complexidade de algoritmos. Listas 2.1. Listas lineares est\u00e1ticas e din\u00e2micas; 2.2. Listas circulares e duplamente ligadas; 2.3. Filas; 2.4. Pilhas; 2.5. Algoritmos b\u00e1sicos de gerenciamento. \u00c1rvores 3.1. \u00c1rvores bin\u00e1rias; 3.2. \u00c1rvores de pesquisa; 3.3. \u00c1rvores AVL; 3.4. \u00c1rvores-B; 3.5. Algoritmos b\u00e1sicos de travessia e gerenciamento. Tabelas 4.1. Pesquisa seq\u00fcencial; 4.2. Pesquisa bin\u00e1ria; 4.3. Estrutura Hashing; 4.4. Algoritmos b\u00e1sicos de gerenciamento. Classifica\u00e7\u00e3o interna 5.1. Classifica\u00e7\u00e3o por inser\u00e7\u00e3o (direta e m\u00e9todo dos incrementos decrescentes); 5.2. Classifica\u00e7\u00e3o por troca (m\u00e9todo da bolha e m\u00e9todo de troca e parti\u00e7\u00e3o); 5.3. Classifica\u00e7\u00e3o por sele\u00e7\u00e3o (m\u00e9todo de sele\u00e7\u00e3o direta e m\u00e9todo de sele\u00e7\u00e3o em \u00e1rvore); 5.4. Classifica\u00e7\u00e3o por distribui\u00e7\u00e3o; 5.5. Classifica\u00e7\u00e3o por intercala\u00e7\u00e3o. Modelo de organiza\u00e7\u00e3o de arquivos 6.1. Sequencial; 6.2. Sequencial Indexado; 6.3. Indexado; 6.4. Acesso direto.","title":"Introdu\u00e7\u00e3o"},{"location":"#disciplina-de-estrutura-de-dados","text":"","title":"Disciplina de Estrutura de dados"},{"location":"#avisos","text":"","title":"Avisos"},{"location":"#trabalho-1-2019-06-15-235959-horario-de-recebimento","text":"","title":"Trabalho 1 - 2019-06-15 23:59:59 - hor\u00e1rio de recebimento;"},{"location":"#prova-1-2019-06-12-1930h-2110h-ate-lista-ligada","text":"Instalando Python ;","title":"Prova 1 - 2019-06-12 - 19:30h - 21:10h - At\u00e9 lista ligada."},{"location":"#professor","text":"Nome: Allan (Allainclair Flausino dos Santos) Email: allainclair@gmail.com Gradua\u00e7\u00e3o: Mestre em Ci\u00eancia da computa\u00e7\u00e3o Informa\u00e7\u00f5es profissionais : LinkeIn - https://www.linkedin.com/in/allainclair/","title":"Professor"},{"location":"#disciplina","text":"Site: https://allainclair.github.io/disc-estrutura-dados/ ; c\u00f3digos: github.com/allainclair reposit\u00f3rio: disc-estrutura-dados; Local: E90, sala 05; Contato de turma: estatisticauem18@gmail.com.","title":"Disciplina"},{"location":"#avaliacao-projeto","text":"prova 1 [0-10] prova 2 [0-10] trabalho 1 [0-10] trabalho 2 [0-10] Nota final (NF) = (prova 1 + prova 2 + trabalho 1 + trabalho 2) / 4 Nota Exame (NE) M\u00e9dia final (MF) = (NF + NE) / 2 Python if NF >= 6.0 : print ( 'aprovado' ) elif MF >= 5.0 : print ( 'aprovado' ) else : print ( 'reprovado' )","title":"Avalia\u00e7\u00e3o (projeto)"},{"location":"#ementa","text":"Estudo de estruturas de dados para a representa\u00e7\u00e3o e manipula\u00e7\u00e3o de informa\u00e7\u00f5es. Estudo das estruturas de dados b\u00e1sicas: listas, \u00e1rvores e suas generaliza\u00e7\u00f5es.","title":"Ementa"},{"location":"#objetivos","text":"Estudar as principais estruturas de dados: listas, \u00e1rvores e tabelas; Estudar os principais m\u00e9todos de busca e classifica\u00e7\u00e3o de dados; No\u00e7\u00f5es de complexidade de algoritmos; Estudo da modelagem de tipos abstratos de dados e objetivos; Estudo de modelo de organiza\u00e7\u00e3o de arquivos; Estudar e desenvolver programas em uma linguagem de alto n\u00edvel.","title":"Objetivos"},{"location":"#conteudo-programatico","text":"Conceitos b\u00e1sicos 1.1. Tipos Abstrato de Dados; 1.2. Estruturas de dados; 1.3. Formas de aloca\u00e7\u00e3o; 1.4. No\u00e7\u00f5es de complexidade de algoritmos. Listas 2.1. Listas lineares est\u00e1ticas e din\u00e2micas; 2.2. Listas circulares e duplamente ligadas; 2.3. Filas; 2.4. Pilhas; 2.5. Algoritmos b\u00e1sicos de gerenciamento. \u00c1rvores 3.1. \u00c1rvores bin\u00e1rias; 3.2. \u00c1rvores de pesquisa; 3.3. \u00c1rvores AVL; 3.4. \u00c1rvores-B; 3.5. Algoritmos b\u00e1sicos de travessia e gerenciamento. Tabelas 4.1. Pesquisa seq\u00fcencial; 4.2. Pesquisa bin\u00e1ria; 4.3. Estrutura Hashing; 4.4. Algoritmos b\u00e1sicos de gerenciamento. Classifica\u00e7\u00e3o interna 5.1. Classifica\u00e7\u00e3o por inser\u00e7\u00e3o (direta e m\u00e9todo dos incrementos decrescentes); 5.2. Classifica\u00e7\u00e3o por troca (m\u00e9todo da bolha e m\u00e9todo de troca e parti\u00e7\u00e3o); 5.3. Classifica\u00e7\u00e3o por sele\u00e7\u00e3o (m\u00e9todo de sele\u00e7\u00e3o direta e m\u00e9todo de sele\u00e7\u00e3o em \u00e1rvore); 5.4. Classifica\u00e7\u00e3o por distribui\u00e7\u00e3o; 5.5. Classifica\u00e7\u00e3o por intercala\u00e7\u00e3o. Modelo de organiza\u00e7\u00e3o de arquivos 6.1. Sequencial; 6.2. Sequencial Indexado; 6.3. Indexado; 6.4. Acesso direto.","title":"Conte\u00fado Program\u00e1tico"},{"location":"LEIAME/","text":"Python 3 Usaremos o Python 3, preferencialmente a vers\u00e3o 3.7 mas creio que n\u00e3o teremos problemas ao usar a vers\u00e3o 3.5. Verifique com o comando python qual a vers\u00e3o, pode ser que o Python esteja na vers\u00e3o 2, se estiver, o comando python3 deve executar a vers\u00e3o 3 . Isto acontece pois sistemas linux vem com as duas vers\u00f5es instaladas, e pode ser que a vers\u00e3o padr\u00e3o (comando python ) seja a vers\u00e3o 2. Ao usar o comando python um prompt ser\u00e1 aberto para que comandos python sejam executados. Tamb\u00e9m ser\u00e1 mostrado a vers\u00e3o do python. Esse prompt tamb\u00e9m chamados de interpretador do Python. \u00c9 uma forma de executar comandos r\u00e1pidos em Python e ver a resposta desses comandos, assim como os comandos do shell/bash do linux. $ python Python 2 .7.13 ( default, Sep 26 2018 , 18 :42:22 ) ... $ python3 Python 3 .7.2 ( default, Feb 27 2019 , 16 :03:03 ) ... Lembre-se de usar sempre o python na vers\u00e3o 3, mesmo que tenha que usar o comando python3 . Executando seus arquivos.py Basta usar o comando python arquivo.py que seu programa ser\u00e1 executado.","title":"LEIAME"},{"location":"LEIAME/#python-3","text":"Usaremos o Python 3, preferencialmente a vers\u00e3o 3.7 mas creio que n\u00e3o teremos problemas ao usar a vers\u00e3o 3.5. Verifique com o comando python qual a vers\u00e3o, pode ser que o Python esteja na vers\u00e3o 2, se estiver, o comando python3 deve executar a vers\u00e3o 3 . Isto acontece pois sistemas linux vem com as duas vers\u00f5es instaladas, e pode ser que a vers\u00e3o padr\u00e3o (comando python ) seja a vers\u00e3o 2. Ao usar o comando python um prompt ser\u00e1 aberto para que comandos python sejam executados. Tamb\u00e9m ser\u00e1 mostrado a vers\u00e3o do python. Esse prompt tamb\u00e9m chamados de interpretador do Python. \u00c9 uma forma de executar comandos r\u00e1pidos em Python e ver a resposta desses comandos, assim como os comandos do shell/bash do linux. $ python Python 2 .7.13 ( default, Sep 26 2018 , 18 :42:22 ) ... $ python3 Python 3 .7.2 ( default, Feb 27 2019 , 16 :03:03 ) ... Lembre-se de usar sempre o python na vers\u00e3o 3, mesmo que tenha que usar o comando python3 .","title":"Python 3"},{"location":"LEIAME/#executando-seus-arquivospy","text":"Basta usar o comando python arquivo.py que seu programa ser\u00e1 executado.","title":"Executando seus arquivos.py"},{"location":"aula1/","text":"Estrutura de dados Em Ci\u00eancia da computa\u00e7\u00e3o, uma estrutura de dado \u00e9 um formato de organiza\u00e7\u00e3o, gerenciamento e armazenamento de dados que habilita acesso e modifica\u00e7\u00e3o eficiente. Revis\u00e3o Vari\u00e1veis simples * Python a = 1 # Inteiro b = 2 c = True # Booleano d = 'uma string' # String e = 1.1 # Ponto flutuante (Float) print ( a ) 1 print ( b ) 2 print ( c ) True print ( d ) uma string print ( e ) 1.1 Operadores * Python # Aritmeticos principais: + - * / % # Extra: ** (potencia) a = 2 b = 4 a + b 6 a ** 2 4 # Logicos principais: not and or # Comparacao: < > <= >= == != a = 2 b = 4 a > b False b > a True","title":"Aula 1 (2019-04-03)"},{"location":"aula1/#estrutura-de-dados","text":"Em Ci\u00eancia da computa\u00e7\u00e3o, uma estrutura de dado \u00e9 um formato de organiza\u00e7\u00e3o, gerenciamento e armazenamento de dados que habilita acesso e modifica\u00e7\u00e3o eficiente.","title":"Estrutura de dados"},{"location":"aula1/#revisao","text":"","title":"Revis\u00e3o"},{"location":"aula1/#variaveis-simples","text":"Python a = 1 # Inteiro b = 2 c = True # Booleano d = 'uma string' # String e = 1.1 # Ponto flutuante (Float) print ( a ) 1 print ( b ) 2 print ( c ) True print ( d ) uma string print ( e ) 1.1","title":"Vari\u00e1veis simples *"},{"location":"aula1/#operadores","text":"Python # Aritmeticos principais: + - * / % # Extra: ** (potencia) a = 2 b = 4 a + b 6 a ** 2 4 # Logicos principais: not and or # Comparacao: < > <= >= == != a = 2 b = 4 a > b False b > a True","title":"Operadores *"},{"location":"aula10/","text":"Listas \u00c9 uma estrtura de dado gen\u00e9rica (tipo abstrado de dado), que pode ser implementada de forma a ser est\u00e1tica ou din\u00e2mica. [1, 1, 2, 3, 5, 8, 11, 21, 34, 55] ['joao', 'maria', 'jose'] [1.0, 2.1, 'maria', 10, 'joao'] Opera\u00e7\u00f5es em qualquer lista Criar lista; Adicionar; Ler; Modificar/Atualizar; Excluir; Excluir lista completa (usa-se o excluir). Implementa\u00e7\u00e3o Est\u00e1tica: tamanho fixo imut\u00e1vel; Din\u00e2mica: tamanho vari\u00e1vel mut\u00e1vel. Est\u00e1tica A lista \u00e9 previamente criada em mem\u00f3ria, logo seu tamanho \u00e9 definido no come\u00e7o e n\u00e3o pode nem diminuir ou aumentar seu tamanho alocado em mem\u00f3ria. Geralmente \u00e9 usado espa\u00e7o em mem\u00f3ria cont\u00edguo. Python SIZE = 10 lista = [ 0 ] * SIZE lista [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] lista [ 1 ] = 10 lista [ 0 , 10 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] lista [ 5 ] = 20 lista [ 0 , 10 , 0 , 0 , 0 , 20 , 0 , 0 , 0 , 0 ] Din\u00e2mica A lista pode ser iniciada sem elementos, e seu tamanho pode aumentar e diminuir de acordo com a vontade do usu\u00e1rio da lista. Python lista = [] lista [] lista . append ( 10 ) lista [ 10 ] lista . append ( 11 ) lista [ 10 , 11 ] lista . insert ( 0 , 12 ) lista [ 12 , 10 , 11 ] Python list_ = [] # Criar. list_ . append ( 10 ) # Adicionar ao final. list_ . insert ( 0 , 10 ) # Adicionar 10 no indice 0. a = list_ [ 1 ] # Ler. list_ [ 1 ] = 100 # Atualizar. del list_ [ 1 ] # Excluir/Deletar pelo indice. list_ . remove ( 10 ) # Excluir/Deletar valor. del list_ # Excluir lista completa. Lista ligada Uma lista din\u00e2mica chamada de lista ligada ; Dados em mem\u00f3ria n\u00e3o s\u00e3o cont\u00edguos. Esse tipo de listas n\u00e3o s\u00e3o acessadas por \u00edndices , apenas \u00e9 poss\u00edvel \"caminhar\" pela lista para manipular elas, ou seja, para ler, adicionar, modificar e excluir elementos da lista ligada. Geralmente s\u00e3o implementadas de forma din\u00e2mica e n\u00e3o cont\u00edgua. Usa-se registros com campos que apontam para outros registros para ligar os n\u00f3s da lista. Registro (ou classe) com campos \"valor e pr\u00f3ximo\".","title":"Aula 10 (2019-05-17)"},{"location":"aula10/#listas","text":"\u00c9 uma estrtura de dado gen\u00e9rica (tipo abstrado de dado), que pode ser implementada de forma a ser est\u00e1tica ou din\u00e2mica. [1, 1, 2, 3, 5, 8, 11, 21, 34, 55] ['joao', 'maria', 'jose'] [1.0, 2.1, 'maria', 10, 'joao']","title":"Listas"},{"location":"aula10/#operacoes-em-qualquer-lista","text":"Criar lista; Adicionar; Ler; Modificar/Atualizar; Excluir; Excluir lista completa (usa-se o excluir).","title":"Opera\u00e7\u00f5es em qualquer lista"},{"location":"aula10/#implementacao","text":"Est\u00e1tica: tamanho fixo imut\u00e1vel; Din\u00e2mica: tamanho vari\u00e1vel mut\u00e1vel.","title":"Implementa\u00e7\u00e3o"},{"location":"aula10/#estatica","text":"A lista \u00e9 previamente criada em mem\u00f3ria, logo seu tamanho \u00e9 definido no come\u00e7o e n\u00e3o pode nem diminuir ou aumentar seu tamanho alocado em mem\u00f3ria. Geralmente \u00e9 usado espa\u00e7o em mem\u00f3ria cont\u00edguo. Python SIZE = 10 lista = [ 0 ] * SIZE lista [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] lista [ 1 ] = 10 lista [ 0 , 10 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] lista [ 5 ] = 20 lista [ 0 , 10 , 0 , 0 , 0 , 20 , 0 , 0 , 0 , 0 ]","title":"Est\u00e1tica"},{"location":"aula10/#dinamica","text":"A lista pode ser iniciada sem elementos, e seu tamanho pode aumentar e diminuir de acordo com a vontade do usu\u00e1rio da lista. Python lista = [] lista [] lista . append ( 10 ) lista [ 10 ] lista . append ( 11 ) lista [ 10 , 11 ] lista . insert ( 0 , 12 ) lista [ 12 , 10 , 11 ] Python list_ = [] # Criar. list_ . append ( 10 ) # Adicionar ao final. list_ . insert ( 0 , 10 ) # Adicionar 10 no indice 0. a = list_ [ 1 ] # Ler. list_ [ 1 ] = 100 # Atualizar. del list_ [ 1 ] # Excluir/Deletar pelo indice. list_ . remove ( 10 ) # Excluir/Deletar valor. del list_ # Excluir lista completa.","title":"Din\u00e2mica"},{"location":"aula10/#lista-ligada","text":"Uma lista din\u00e2mica chamada de lista ligada ; Dados em mem\u00f3ria n\u00e3o s\u00e3o cont\u00edguos. Esse tipo de listas n\u00e3o s\u00e3o acessadas por \u00edndices , apenas \u00e9 poss\u00edvel \"caminhar\" pela lista para manipular elas, ou seja, para ler, adicionar, modificar e excluir elementos da lista ligada. Geralmente s\u00e3o implementadas de forma din\u00e2mica e n\u00e3o cont\u00edgua. Usa-se registros com campos que apontam para outros registros para ligar os n\u00f3s da lista. Registro (ou classe) com campos \"valor e pr\u00f3ximo\".","title":"Lista ligada"},{"location":"aula11/","text":"Lista ligada Opera\u00e7\u00f5es Criar lista; Adicionar (no come\u00e7o, no final); Buscar por \"valor\"; Modificar/Atualizar (dado um \"valor\"); Excluir (dado um \"valor\"); Excluir lista completa (reset). Adicionar In\u00edcio Fim Excluir Excluir tudo (reset) Buscar e retornar posi\u00e7\u00e3o","title":"Aula 11 (2019-05-22)"},{"location":"aula11/#lista-ligada","text":"","title":"Lista ligada"},{"location":"aula11/#operacoes","text":"Criar lista; Adicionar (no come\u00e7o, no final); Buscar por \"valor\"; Modificar/Atualizar (dado um \"valor\"); Excluir (dado um \"valor\"); Excluir lista completa (reset).","title":"Opera\u00e7\u00f5es"},{"location":"aula11/#adicionar","text":"","title":"Adicionar"},{"location":"aula11/#inicio","text":"","title":"In\u00edcio"},{"location":"aula11/#fim","text":"","title":"Fim"},{"location":"aula11/#excluir","text":"","title":"Excluir"},{"location":"aula11/#excluir-tudo-reset","text":"","title":"Excluir tudo (reset)"},{"location":"aula11/#buscar-e-retornar-posicao","text":"","title":"Buscar e retornar posi\u00e7\u00e3o"},{"location":"aula12/","text":"Buscar e retornar posi\u00e7\u00e3o Atualizar Excluir tudo (reset) In\u00edcio do 2\u00ba bimestre: Pilha e Fila Pilha Primeiro a entrar \u00e9 \u00faltimo a sair ( First in Last out: FILO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"empurrar\" e \"puxar\" ( push e pop ). Fila Primeiro a entrar \u00e9 primeiro a sair ( First in First out: FIFO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"enfileirar\" e \"desinfileirar\" ( enqueue e dequeue ).","title":"Aula 12 (2019-05-24)"},{"location":"aula12/#buscar-e-retornar-posicao","text":"","title":"Buscar e retornar posi\u00e7\u00e3o"},{"location":"aula12/#atualizar","text":"","title":"Atualizar"},{"location":"aula12/#excluir-tudo-reset","text":"","title":"Excluir tudo (reset)"},{"location":"aula12/#inicio-do-2o-bimestre-pilha-e-fila","text":"","title":"In\u00edcio do 2\u00ba bimestre: Pilha e Fila"},{"location":"aula12/#pilha","text":"Primeiro a entrar \u00e9 \u00faltimo a sair ( First in Last out: FILO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"empurrar\" e \"puxar\" ( push e pop ).","title":"Pilha"},{"location":"aula12/#fila","text":"Primeiro a entrar \u00e9 primeiro a sair ( First in First out: FIFO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"enfileirar\" e \"desinfileirar\" ( enqueue e dequeue ).","title":"Fila"},{"location":"aula13/","text":"In\u00edcio do 2\u00ba bimestre: Pilha e Fila Pilha ( Stack ) Primeiro a entrar \u00e9 \u00faltimo a sair ( First in Last out: FILO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"empurrar\" e \"puxar\" ( push e pop ). Aplica\u00e7\u00e3o: Nota\u00e7\u00e3o Sufixo ( Postfix ) Infixo: x ^ y / (5 * z) + 10 Sufixo: x y ^ 5 z * / 10 + Usa-se uma pilha para criar a nota\u00e7\u00e3o Sufixa (operador vem no final). Isto \u00e9, dado operadores bin\u00e1rios (dois argumentos), sempre que vier um n\u00famero (ou vari\u00e1vel como no exemplo), empilha-se esses valores; j\u00e1 quando vier o operador, desempilha-se os dois \u00faltimos elementos e aplica-se o operador, at\u00e9 que at\u00e9 que seja consumido toda a lista que representa a opera\u00e7\u00e3o completa. Dica: usar fun\u00e7\u00e3o \"eval\" do Python para validar as express\u00f5es em formato de string. Fila ( Queue ) Primeiro a entrar \u00e9 primeiro a sair ( First in First out: FIFO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"enfileirar\" e \"desinfileirar\" ( enqueue e dequeue ).","title":"Aula 13 (2019-05-29)"},{"location":"aula13/#inicio-do-2o-bimestre-pilha-e-fila","text":"","title":"In\u00edcio do 2\u00ba bimestre: Pilha e Fila"},{"location":"aula13/#pilha-stack","text":"Primeiro a entrar \u00e9 \u00faltimo a sair ( First in Last out: FILO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"empurrar\" e \"puxar\" ( push e pop ).","title":"Pilha (Stack)"},{"location":"aula13/#aplicacao-notacao-sufixo-postfix","text":"","title":"Aplica\u00e7\u00e3o: Nota\u00e7\u00e3o Sufixo (Postfix)"},{"location":"aula13/#infixo","text":"x ^ y / (5 * z) + 10","title":"Infixo:"},{"location":"aula13/#sufixo","text":"x y ^ 5 z * / 10 + Usa-se uma pilha para criar a nota\u00e7\u00e3o Sufixa (operador vem no final). Isto \u00e9, dado operadores bin\u00e1rios (dois argumentos), sempre que vier um n\u00famero (ou vari\u00e1vel como no exemplo), empilha-se esses valores; j\u00e1 quando vier o operador, desempilha-se os dois \u00faltimos elementos e aplica-se o operador, at\u00e9 que at\u00e9 que seja consumido toda a lista que representa a opera\u00e7\u00e3o completa. Dica: usar fun\u00e7\u00e3o \"eval\" do Python para validar as express\u00f5es em formato de string.","title":"Sufixo:"},{"location":"aula13/#fila-queue","text":"Primeiro a entrar \u00e9 primeiro a sair ( First in First out: FIFO ); Duas opera\u00e7\u00f5es b\u00e1sicas: \"enfileirar\" e \"desinfileirar\" ( enqueue e dequeue ).","title":"Fila (Queue)"},{"location":"aula2/","text":"\"Revis\u00e3o\" Exerc\u00edcio da Nota Final e M\u00e9dia Final (NF e MF) Um professor pretende saber se os seus alunos est\u00e3o aprovados ou reprovados por meio de um programa em Python! O programa pede para o professor adicionar a Nota Final (NF) de um determinado aluno, se esse aluno n\u00e3o passar com a Nota Final, o sistema tamb\u00e9m pede a M\u00e9dia Final (MF) desse aluno. Com isso, o sistema pode informar se esse aluno passou ou n\u00e3o na disciplina do professor. Escreva o c\u00f3digo fonte em python para o professor! \u00c9 necess\u00e1rio que as notas sejam dadas por meio do teclado com a fun\u00e7\u00e3o input e a sa\u00edda seja impressa na tela com a fun\u00e7\u00e3o print . Python if NF >= 6.0 : print ( 'aprovado' ) elif MF >= 5.0 : print ( 'aprovado' ) else : print ( 'reprovado' ) Exerc\u00edcio idade ano, meses para dias Escreve um programa que leia a idade de uma pessoa expressa em anos, meses e dias e mostre-a expressa apenas em dias. Transforme esse seu programa para uma fun\u00e7\u00e3o chamada idade_dias(anos, meses, dias) que recebe os 3 argumentos respectivamente e retorne a idade em dias. Obs.: assumir que todos anos tenham 365 dias e que todos os meses tenham 30 dias. (para facilitar o programa) Ex: Entrada : 10 ( anos ), 2 ( meses ), 3 ( dias ) Sa\u00edda : -- Python ''' def idade_em_dias(anos, meses, dias): anos_em_dias = 0 if anos > 0: anos_em_dias = anos * 365 if meses > 0: meses_em_dias = meses * 30 resultado = anos_em_dias + meses_em_dias + dias return resultado ''' \"\"\" Apas duplas \"\"\" def idade_em_dias ( anos , meses , dias ): return anos * 365 + meses * 30 + dias def main (): # 10 anos 3 meses 2 dias anos = 10 meses = 3 dias = 2 anos_em_dias = anos * 365 print ( 'Anos em dias' , anos_em_dias ) meses_em_dias = meses * 30 print ( 'Meses em dias' , meses_em_dias ) resultado = anos_em_dias + meses_em_dias + dias print ( 'Resultado' , resultado ) if __name__ == '__main__' : main ()","title":"Aula 2 (2019-04-05)"},{"location":"aula2/#revisao","text":"","title":"\"Revis\u00e3o\""},{"location":"aula2/#exercicio-da-nota-final-e-media-final-nf-e-mf","text":"Um professor pretende saber se os seus alunos est\u00e3o aprovados ou reprovados por meio de um programa em Python! O programa pede para o professor adicionar a Nota Final (NF) de um determinado aluno, se esse aluno n\u00e3o passar com a Nota Final, o sistema tamb\u00e9m pede a M\u00e9dia Final (MF) desse aluno. Com isso, o sistema pode informar se esse aluno passou ou n\u00e3o na disciplina do professor. Escreva o c\u00f3digo fonte em python para o professor! \u00c9 necess\u00e1rio que as notas sejam dadas por meio do teclado com a fun\u00e7\u00e3o input e a sa\u00edda seja impressa na tela com a fun\u00e7\u00e3o print . Python if NF >= 6.0 : print ( 'aprovado' ) elif MF >= 5.0 : print ( 'aprovado' ) else : print ( 'reprovado' )","title":"Exerc\u00edcio da Nota Final e M\u00e9dia Final (NF e MF)"},{"location":"aula2/#exercicio-idade-ano-meses-para-dias","text":"Escreve um programa que leia a idade de uma pessoa expressa em anos, meses e dias e mostre-a expressa apenas em dias. Transforme esse seu programa para uma fun\u00e7\u00e3o chamada idade_dias(anos, meses, dias) que recebe os 3 argumentos respectivamente e retorne a idade em dias. Obs.: assumir que todos anos tenham 365 dias e que todos os meses tenham 30 dias. (para facilitar o programa) Ex: Entrada : 10 ( anos ), 2 ( meses ), 3 ( dias ) Sa\u00edda : -- Python ''' def idade_em_dias(anos, meses, dias): anos_em_dias = 0 if anos > 0: anos_em_dias = anos * 365 if meses > 0: meses_em_dias = meses * 30 resultado = anos_em_dias + meses_em_dias + dias return resultado ''' \"\"\" Apas duplas \"\"\" def idade_em_dias ( anos , meses , dias ): return anos * 365 + meses * 30 + dias def main (): # 10 anos 3 meses 2 dias anos = 10 meses = 3 dias = 2 anos_em_dias = anos * 365 print ( 'Anos em dias' , anos_em_dias ) meses_em_dias = meses * 30 print ( 'Meses em dias' , meses_em_dias ) resultado = anos_em_dias + meses_em_dias + dias print ( 'Resultado' , resultado ) if __name__ == '__main__' : main ()","title":"Exerc\u00edcio idade ano, meses para dias"},{"location":"aula3/","text":"Algumas formas de print * Python print ( 'Print com mais do que um argumento' , arg1 , arg2 ) print ( 'dez' , 10 , sep = '' ) print ( 'Uso do operador \"percentage\" para string: %s %s ' % ( string1 , string2 )) # Python Version >= 3.7 string = 'uma string' print ( f 'Uma string com interpotalacao: {string}' ) print ( 'Evitar linhas de codigos muito extensas pois dificulta a leitura do seu ' 'codigo, entao essa eh uma forma de vc quebrar a linha. Existe uma regra ' 'de no maximo 79-80 colunas de codigo, tente usar ela, soh que nao tem ' 'problema se passar de 80 ou chegar ateh umas 85 colunas. Essa formatacao ' 'de codigo desse print pode ser usada nos codigos tambem.' ) print ( 'para quebrar a linha ' 'use dessa forma' ) funcao ( argumento1 , argumento2 , argumento3 , argumento4 , argumento5 , argumento6 , argumento7 , argumento8 ) Estrutura de dado lista Podemos chamar at\u00e9 de vetor, array , arranjo, sequ\u00eancia, pois uma lista tem uma ordem definida de elementos e os elementos de uma lista tamb\u00e9m podem ser repetidos . Python lista_de_numeros = [ - 1 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 ] lista_de_letras = [ 'a' , 'b' , 'c' , 'x' , 'y' , 'z' ] lista_mista = [ 0 , 1 , 'a' , 'b' , 'c' , 'string' , 1.1 ] people_list = [ 'allan' , 'maria' , 'jose' , 'enzo' , 'valentina' ] lista_mista [ 3 ] 'b' people_list [ 3 ] enzo len ( people_list ) 5 people_list . append ( 'allan' ) people_list . count ( 'allan' ) people_list . insert ( 1 , 'lucas' ) people_list . remove ( 'allan' ) lista_de_numeros + lista_de_letras [ - 1 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' , 'x' , 'y' , 'z' ] people_list . pop () 'lucas'","title":"Aula 3 (2019-04-10)"},{"location":"aula3/#algumas-formas-de-print","text":"Python print ( 'Print com mais do que um argumento' , arg1 , arg2 ) print ( 'dez' , 10 , sep = '' ) print ( 'Uso do operador \"percentage\" para string: %s %s ' % ( string1 , string2 )) # Python Version >= 3.7 string = 'uma string' print ( f 'Uma string com interpotalacao: {string}' ) print ( 'Evitar linhas de codigos muito extensas pois dificulta a leitura do seu ' 'codigo, entao essa eh uma forma de vc quebrar a linha. Existe uma regra ' 'de no maximo 79-80 colunas de codigo, tente usar ela, soh que nao tem ' 'problema se passar de 80 ou chegar ateh umas 85 colunas. Essa formatacao ' 'de codigo desse print pode ser usada nos codigos tambem.' ) print ( 'para quebrar a linha ' 'use dessa forma' ) funcao ( argumento1 , argumento2 , argumento3 , argumento4 , argumento5 , argumento6 , argumento7 , argumento8 )","title":"Algumas formas de print *"},{"location":"aula3/#estrutura-de-dado-lista","text":"Podemos chamar at\u00e9 de vetor, array , arranjo, sequ\u00eancia, pois uma lista tem uma ordem definida de elementos e os elementos de uma lista tamb\u00e9m podem ser repetidos . Python lista_de_numeros = [ - 1 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 ] lista_de_letras = [ 'a' , 'b' , 'c' , 'x' , 'y' , 'z' ] lista_mista = [ 0 , 1 , 'a' , 'b' , 'c' , 'string' , 1.1 ] people_list = [ 'allan' , 'maria' , 'jose' , 'enzo' , 'valentina' ] lista_mista [ 3 ] 'b' people_list [ 3 ] enzo len ( people_list ) 5 people_list . append ( 'allan' ) people_list . count ( 'allan' ) people_list . insert ( 1 , 'lucas' ) people_list . remove ( 'allan' ) lista_de_numeros + lista_de_letras [ - 1 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' , 'x' , 'y' , 'z' ] people_list . pop () 'lucas'","title":"Estrutura de dado lista"},{"location":"aula4/","text":"Operador IN Operador que retorna uma avalia\u00e7\u00e3o booleana (True or False). An\u00e1logo \u00e0 nota\u00e7\u00e3o de conjutos \"pertence\" (diferente de \"est\u00e1 contido\"). VARIAVEL in ESTRUTURA_QUE_SUPORTA_IN Python 10 in [ 1 , 2 , 3 , 4 ] 11 in [ 1 , 2 , 11 , 4 ] 'enzo' in [ 'allan' , 'maria' , 'jose' , 'enzo' , 'valentina' ] [ 1 , 2 , 3 , 4 ] in [ 1 , 2 , 3 , 4 ] lista_de_inteiros = [ 1 , 2 , 3 , 4 ] lista_mista = [[ 1 , 2 , 3 , 4 ], 'a' , 'b' , 'c' ] lista_de_inteiros in lista_mista Estruturas de repeti\u00e7\u00e3o ** FOR e WHILE FOR *** An\u00e1logo \u00e0 nota\u00e7\u00e3o de forma\u00e7\u00e3o de conjuntos. Exemplos: Para cada x pertencente ao conjunto {1, 2, 3, 4} crie um conjunto com o quadrado de x; Para cada x pertencente ao conjunto {1, 2, 3, 4} imprima o dobro de x; Para cada x pertencente ao conjunto {1, 2, 3, 4} imprima o dobro de x se x for par. Ent\u00e3o podemos dizer que da para ler um for da seguinte forma: \"para cada elemento na lista fa\u00e7a:\" Python for ELEMENTO in ITERADOR : CORPO DO FOR C for ( i = 0 ; i < n ; i ++ ) { CORPO DO FOR } Um iterador \u00e9 um \"conjunto de elementos\", podendo ser vazio, ter apenas um elemento, ou mais do que um elemento. Se for vazio, o corpo (escopo) do for n\u00e3o \u00e9 executado. Caso contr\u00e1rio o corpo do for \u00e9 executado em todos elementos do iterador. Python for i in [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]: print ( 'i: %s ' , i ) 1 2 3 4 5 6 7 8 9 10 for letra in [ 'a' , 'b' , 'c' , 'd' ]: print ( 'letra:' , letra ) a b c d letras = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' ] for letra in letras : print ( 'letra:' , letra ) a b c d e f Outros exemplos com FOR: Python range ( 10 ) # Funcao pronta (interna) do Python. range ( 0 , 10 ) # Transformar o \"range\" em uma \"list\" (vetor). # Para fins de aprendizado, vetor e lista (list) sao sinonimos. list ( range ( 10 )) [ 0 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] list ( range ( 5 , 10 )) [ 5 , 6 , 7 , 8 , 9 ] list ( range ( 5 , 10 , 2 )) [ 5 , 7 , 9 ] vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] tamanho = len ( vetor ) # Funcao pronta (interna) do Python. print ( tamanho ) 10 for i in range ( tamanho ): print ( 'i: %s ' , vetor [ i ]) # Alernativa mais elegante. for elemento in vetor : print ( 'Elemento: %s ' , elemento ) # Alernativa elegante enumerada. for i , elemento in enumerate ( vetor ): print ( 'Elemento %s : %s ' , ( i , elemento )) list ( enumerate ( vetor )) [( 0 , 1 ), ( 1 , 2 ), ( 2 , 3 ), ( 3 , 4 ), ( 4 , 5 ), ( 5 , 6 ), ( 6 , 7 ), ( 7 , 8 ), ( 8 , 9 )] nomes = [ 'joao' , 'maria,' 'jose' ] for i , elemento in enumerate ( nomes ): print ( 'Elemento %s : %s ' , ( i , elemento ))","title":"Aula 4 (2019-04-12)"},{"location":"aula4/#operador-in","text":"Operador que retorna uma avalia\u00e7\u00e3o booleana (True or False). An\u00e1logo \u00e0 nota\u00e7\u00e3o de conjutos \"pertence\" (diferente de \"est\u00e1 contido\"). VARIAVEL in ESTRUTURA_QUE_SUPORTA_IN Python 10 in [ 1 , 2 , 3 , 4 ] 11 in [ 1 , 2 , 11 , 4 ] 'enzo' in [ 'allan' , 'maria' , 'jose' , 'enzo' , 'valentina' ] [ 1 , 2 , 3 , 4 ] in [ 1 , 2 , 3 , 4 ] lista_de_inteiros = [ 1 , 2 , 3 , 4 ] lista_mista = [[ 1 , 2 , 3 , 4 ], 'a' , 'b' , 'c' ] lista_de_inteiros in lista_mista","title":"Operador IN"},{"location":"aula4/#estruturas-de-repeticao","text":"FOR e WHILE","title":"Estruturas de repeti\u00e7\u00e3o **"},{"location":"aula4/#for","text":"An\u00e1logo \u00e0 nota\u00e7\u00e3o de forma\u00e7\u00e3o de conjuntos. Exemplos: Para cada x pertencente ao conjunto {1, 2, 3, 4} crie um conjunto com o quadrado de x; Para cada x pertencente ao conjunto {1, 2, 3, 4} imprima o dobro de x; Para cada x pertencente ao conjunto {1, 2, 3, 4} imprima o dobro de x se x for par. Ent\u00e3o podemos dizer que da para ler um for da seguinte forma: \"para cada elemento na lista fa\u00e7a:\" Python for ELEMENTO in ITERADOR : CORPO DO FOR C for ( i = 0 ; i < n ; i ++ ) { CORPO DO FOR } Um iterador \u00e9 um \"conjunto de elementos\", podendo ser vazio, ter apenas um elemento, ou mais do que um elemento. Se for vazio, o corpo (escopo) do for n\u00e3o \u00e9 executado. Caso contr\u00e1rio o corpo do for \u00e9 executado em todos elementos do iterador. Python for i in [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]: print ( 'i: %s ' , i ) 1 2 3 4 5 6 7 8 9 10 for letra in [ 'a' , 'b' , 'c' , 'd' ]: print ( 'letra:' , letra ) a b c d letras = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' ] for letra in letras : print ( 'letra:' , letra ) a b c d e f Outros exemplos com FOR: Python range ( 10 ) # Funcao pronta (interna) do Python. range ( 0 , 10 ) # Transformar o \"range\" em uma \"list\" (vetor). # Para fins de aprendizado, vetor e lista (list) sao sinonimos. list ( range ( 10 )) [ 0 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] list ( range ( 5 , 10 )) [ 5 , 6 , 7 , 8 , 9 ] list ( range ( 5 , 10 , 2 )) [ 5 , 7 , 9 ] vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] tamanho = len ( vetor ) # Funcao pronta (interna) do Python. print ( tamanho ) 10 for i in range ( tamanho ): print ( 'i: %s ' , vetor [ i ]) # Alernativa mais elegante. for elemento in vetor : print ( 'Elemento: %s ' , elemento ) # Alernativa elegante enumerada. for i , elemento in enumerate ( vetor ): print ( 'Elemento %s : %s ' , ( i , elemento )) list ( enumerate ( vetor )) [( 0 , 1 ), ( 1 , 2 ), ( 2 , 3 ), ( 3 , 4 ), ( 4 , 5 ), ( 5 , 6 ), ( 6 , 7 ), ( 7 , 8 ), ( 8 , 9 )] nomes = [ 'joao' , 'maria,' 'jose' ] for i , elemento in enumerate ( nomes ): print ( 'Elemento %s : %s ' , ( i , elemento ))","title":"FOR ***"},{"location":"aula5/","text":"WHILE * Python while CONDICAO : CORPO DO WHILE Enquanto a condi\u00e7\u00e3o for verdadeira o while \u00e9 executado indefinidamente; caso contr\u00e1rio o while para sua execu\u00e7\u00e3o. Python condicao = True i = 0 while condicao : print ( i ) i += 1 if i > 10 : condicao = False Fun\u00e7\u00e3o ** Python def nome ( parametro1 , parametro2 ): CORPO DA FUNCAO return VALOR Exemplos e revis\u00e3o Vetor (Arranjo) Formato: Python # Em python o nome dessa estrutura de dado eh conhecida como lista # Mas para fins de exemplo criamos uma variavel com o nome vetor. # Indices do vetor comeca em 0. vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] print ( vetor [ 0 ]) 1 C /* Aqui alocamos um vetor de inteiros com 10 elementos, sendo eles todo * o intervalo [1, 10]. * Indicies comecam em 0. */ int vetor [] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; printf ( \"%d\" , vetor [ 0 ]); 1 Gerenciamento: Em um vetor podemos: adicionar, atualizar, excluir e ler elementos. Adicionar * Adi\u00e7\u00e3o modifica o vetor original, aumentando pelo menos um elemento novo. Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor . append ( 11 ) # Metodo (funcao) de orientacao a objeto. vetor [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 ] # Apenas para mostrar como eh no \"paradigma estrutural\". def meu_append ( vetor , novo_elemento ): vetor . append ( novo_elemento ) # Funcao nao retorna nada, podemos chamar de \"procedimento\". vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] meu_append ( vetor , novo_elemento ) vetor [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 ] Atualizar * Atualiza\u00e7\u00e3o precisa modificar algum elemento j\u00e1 existente do vetor original. Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor [ 2 ] = 11 vetor [ 1 , 2 , 11 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] Remover * Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor . remove ( 5 ) # Qual algoritmo eh necessario ANTES de remover? vetor [ 1 , 2 , 3 , 4 , 6 , 7 , 8 , 9 , 10 ] # TODO: exercicio: fazer o seu proprio remover. def meu_remover ( vetor , elemento ): pass # Funcao nao retorna nada Ler * Python # Leitura NAO pode modificar o nosso vetor original vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] a = vetor [ 2 ] a 2 # Leitura direta do vetor para impressao print ( vetor [ 2 ]) Armazenamento: ** Mem\u00f3ria RAM, registradores do processador (CPU), dispositivo de armazenamento secund\u00e1rio (HDDs, SSDs, etc). Mem\u00f3ria RAM ** Um vetor de caracteres armazenados em mem\u00f3ria RAM. # Assumindo que cada caracter tem um byte. vetor = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] Endere\u00e7o Dado 100000 '1' 100001 '2' 100002 '3' 100003 '4' 100004 '5' 100005 '6' 100006 '7' 100007 '8' 100008 '9' 100009 '10' Exerc\u00edcio Crie uma fun\u00e7\u00e3o que receba 5 nomes e coloque esses nomes em uma lista1 que est\u00e1 na ordem dos argumentos, e em uma lista2 que est\u00e1 na ordem inversa dos argumentos. (sem usar reverse ) Exerc\u00edcio: encontrar posi\u00e7\u00e3o de um elemento em um vetor ** Dado um vetor e um elemento como entrada para uma fun\u00e7\u00e3o chamda de find , retorne a posi\u00e7\u00e3o do elemento encontrado; caso n\u00e3o seja encontrado retorne None (nulo). Python def find ( vetor , elemento ): Pesquisas Pesquisa sequencial Dado um elemento, e uma lista, encontre o elemento dentro da lista sem usar o operado in . Pesquisa bin\u00e1ria Requisito: lista ordenada. Recurs\u00e3o Hash","title":"Aula 5 (2019-04-24)"},{"location":"aula5/#while","text":"Python while CONDICAO : CORPO DO WHILE Enquanto a condi\u00e7\u00e3o for verdadeira o while \u00e9 executado indefinidamente; caso contr\u00e1rio o while para sua execu\u00e7\u00e3o. Python condicao = True i = 0 while condicao : print ( i ) i += 1 if i > 10 : condicao = False","title":"WHILE *"},{"location":"aula5/#funcao","text":"Python def nome ( parametro1 , parametro2 ): CORPO DA FUNCAO return VALOR","title":"Fun\u00e7\u00e3o **"},{"location":"aula5/#exemplos-e-revisao","text":"","title":"Exemplos e revis\u00e3o"},{"location":"aula5/#vetor-arranjo","text":"","title":"Vetor (Arranjo)"},{"location":"aula5/#formato","text":"Python # Em python o nome dessa estrutura de dado eh conhecida como lista # Mas para fins de exemplo criamos uma variavel com o nome vetor. # Indices do vetor comeca em 0. vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] print ( vetor [ 0 ]) 1 C /* Aqui alocamos um vetor de inteiros com 10 elementos, sendo eles todo * o intervalo [1, 10]. * Indicies comecam em 0. */ int vetor [] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; printf ( \"%d\" , vetor [ 0 ]); 1","title":"Formato:"},{"location":"aula5/#gerenciamento","text":"Em um vetor podemos: adicionar, atualizar, excluir e ler elementos.","title":"Gerenciamento:"},{"location":"aula5/#adicionar","text":"Adi\u00e7\u00e3o modifica o vetor original, aumentando pelo menos um elemento novo. Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor . append ( 11 ) # Metodo (funcao) de orientacao a objeto. vetor [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 ] # Apenas para mostrar como eh no \"paradigma estrutural\". def meu_append ( vetor , novo_elemento ): vetor . append ( novo_elemento ) # Funcao nao retorna nada, podemos chamar de \"procedimento\". vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] meu_append ( vetor , novo_elemento ) vetor [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 ]","title":"Adicionar *"},{"location":"aula5/#atualizar","text":"Atualiza\u00e7\u00e3o precisa modificar algum elemento j\u00e1 existente do vetor original. Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor [ 2 ] = 11 vetor [ 1 , 2 , 11 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]","title":"Atualizar *"},{"location":"aula5/#remover","text":"Python vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] vetor . remove ( 5 ) # Qual algoritmo eh necessario ANTES de remover? vetor [ 1 , 2 , 3 , 4 , 6 , 7 , 8 , 9 , 10 ] # TODO: exercicio: fazer o seu proprio remover. def meu_remover ( vetor , elemento ): pass # Funcao nao retorna nada","title":"Remover *"},{"location":"aula5/#ler","text":"Python # Leitura NAO pode modificar o nosso vetor original vetor = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] a = vetor [ 2 ] a 2 # Leitura direta do vetor para impressao print ( vetor [ 2 ])","title":"Ler *"},{"location":"aula5/#armazenamento","text":"Mem\u00f3ria RAM, registradores do processador (CPU), dispositivo de armazenamento secund\u00e1rio (HDDs, SSDs, etc).","title":"Armazenamento: **"},{"location":"aula5/#memoria-ram","text":"Um vetor de caracteres armazenados em mem\u00f3ria RAM. # Assumindo que cada caracter tem um byte. vetor = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] Endere\u00e7o Dado 100000 '1' 100001 '2' 100002 '3' 100003 '4' 100004 '5' 100005 '6' 100006 '7' 100007 '8' 100008 '9' 100009 '10'","title":"Mem\u00f3ria RAM **"},{"location":"aula5/#exercicio","text":"Crie uma fun\u00e7\u00e3o que receba 5 nomes e coloque esses nomes em uma lista1 que est\u00e1 na ordem dos argumentos, e em uma lista2 que est\u00e1 na ordem inversa dos argumentos. (sem usar reverse )","title":"Exerc\u00edcio"},{"location":"aula5/#exercicio-encontrar-posicao-de-um-elemento-em-um-vetor","text":"Dado um vetor e um elemento como entrada para uma fun\u00e7\u00e3o chamda de find , retorne a posi\u00e7\u00e3o do elemento encontrado; caso n\u00e3o seja encontrado retorne None (nulo). Python def find ( vetor , elemento ):","title":"Exerc\u00edcio: encontrar posi\u00e7\u00e3o de um elemento em um vetor **"},{"location":"aula5/#pesquisas","text":"","title":"Pesquisas"},{"location":"aula5/#pesquisa-sequencial","text":"Dado um elemento, e uma lista, encontre o elemento dentro da lista sem usar o operado in .","title":"Pesquisa sequencial"},{"location":"aula5/#pesquisa-binaria","text":"Requisito: lista ordenada.","title":"Pesquisa bin\u00e1ria"},{"location":"aula5/#recursao","text":"","title":"Recurs\u00e3o"},{"location":"aula5/#hash","text":"","title":"Hash"},{"location":"aula6/","text":"Recurs\u00e3o Fun\u00e7\u00e3o chama ela pr\u00f3pria no seu escopo; Para isso \u00e9 necess\u00e1rio uma \"condi\u00e7\u00e3o base\"; Chamadas v\u00e3o sendo empilhadas e depois desempilhadas ao passo que se chega na \"condi\u00e7\u00e3o base\" e assim a \u00faltima chamada retorna algum valor; Muitos algoritmos (todos os iterativos) podem ter uma vers\u00e3o recursiva. Exemplos soma de lista; exponencial; fatorial. Precisaremos do fun\u00e7\u00f5es recursivas para os pr\u00f3ximos algoritmos do semestre. Pesquisa sequencial Dado um elemento, e uma lista, encontre o elemento dentro dessa lista e retorne vedadeiro se encontrar; falso caso contr\u00e1rio. Pesquisa bin\u00e1ria Requisito: lista ordenada; Aloca\u00e7\u00e3o est\u00e1tica x din\u00e2mica de mem\u00f3ria","title":"Aula 6 (2019-04-26)"},{"location":"aula6/#recursao","text":"Fun\u00e7\u00e3o chama ela pr\u00f3pria no seu escopo; Para isso \u00e9 necess\u00e1rio uma \"condi\u00e7\u00e3o base\"; Chamadas v\u00e3o sendo empilhadas e depois desempilhadas ao passo que se chega na \"condi\u00e7\u00e3o base\" e assim a \u00faltima chamada retorna algum valor; Muitos algoritmos (todos os iterativos) podem ter uma vers\u00e3o recursiva.","title":"Recurs\u00e3o"},{"location":"aula6/#exemplos","text":"soma de lista; exponencial; fatorial. Precisaremos do fun\u00e7\u00f5es recursivas para os pr\u00f3ximos algoritmos do semestre.","title":"Exemplos"},{"location":"aula6/#pesquisa-sequencial","text":"Dado um elemento, e uma lista, encontre o elemento dentro dessa lista e retorne vedadeiro se encontrar; falso caso contr\u00e1rio.","title":"Pesquisa sequencial"},{"location":"aula6/#pesquisa-binaria","text":"Requisito: lista ordenada;","title":"Pesquisa bin\u00e1ria"},{"location":"aula6/#alocacao-estatica-x-dinamica-de-memoria","text":"","title":"Aloca\u00e7\u00e3o est\u00e1tica x din\u00e2mica de mem\u00f3ria"},{"location":"aula7/","text":"Recurs\u00e3o Fun\u00e7\u00e3o chama ela pr\u00f3pria no seu escopo; Exemplos soma de lista; exponencial; fatorial. Pesquisa sequencial Dado um elemento, e uma lista, encontre o elemento dentro dessa lista e retorne vedadeiro se encontrar; falso caso contr\u00e1rio. Pesquisa bin\u00e1ria Requisito: lista ordenada; Vers\u00e3o iterativa e vers\u00e3o recursiva.","title":"Aula 7 (2019-05-03)"},{"location":"aula7/#recursao","text":"Fun\u00e7\u00e3o chama ela pr\u00f3pria no seu escopo;","title":"Recurs\u00e3o"},{"location":"aula7/#exemplos","text":"soma de lista; exponencial; fatorial.","title":"Exemplos"},{"location":"aula7/#pesquisa-sequencial","text":"Dado um elemento, e uma lista, encontre o elemento dentro dessa lista e retorne vedadeiro se encontrar; falso caso contr\u00e1rio.","title":"Pesquisa sequencial"},{"location":"aula7/#pesquisa-binaria","text":"Requisito: lista ordenada; Vers\u00e3o iterativa e vers\u00e3o recursiva.","title":"Pesquisa bin\u00e1ria"},{"location":"aula8/","text":"Pesquisa bin\u00e1ria Requisito: lista ordenada; Algoritmo iterativo; Algoritmo recursivo. Implementar o \"count()\" usando pesquisa bin\u00e1ria. Lembrando que para usar a pesquisa bin\u00e1ria a lista precisa estar ordenada. Pesquisa atrav\u00e9s de c\u00e1lculo de endere\u00e7o Hash; f(elemento) -> endere\u00e7o; Adicionamos esse elemento no endere\u00e7o, e buscamos esse elemento por meio novamente de f(elemento); Para inserir e para buscar o elmenento as opera\u00e7\u00e3o s\u00e3o em tempo constante (\"1 acesso\"); Existe um mapeamento do elemento para um n\u00famero (um endere\u00e7o), e esse endere\u00e7o nos retorna o elemento quando ele \u00e9 buscado; Dicion\u00e1rio d = {1: 10, 2: 5, 'joao': [1, 2, 3]}.","title":"Aula 8 (2019-05-08)"},{"location":"aula8/#pesquisa-binaria","text":"Requisito: lista ordenada; Algoritmo iterativo; Algoritmo recursivo. Implementar o \"count()\" usando pesquisa bin\u00e1ria. Lembrando que para usar a pesquisa bin\u00e1ria a lista precisa estar ordenada.","title":"Pesquisa bin\u00e1ria"},{"location":"aula8/#pesquisa-atraves-de-calculo-de-endereco","text":"Hash; f(elemento) -> endere\u00e7o; Adicionamos esse elemento no endere\u00e7o, e buscamos esse elemento por meio novamente de f(elemento); Para inserir e para buscar o elmenento as opera\u00e7\u00e3o s\u00e3o em tempo constante (\"1 acesso\"); Existe um mapeamento do elemento para um n\u00famero (um endere\u00e7o), e esse endere\u00e7o nos retorna o elemento quando ele \u00e9 buscado; Dicion\u00e1rio d = {1: 10, 2: 5, 'joao': [1, 2, 3]}.","title":"Pesquisa atrav\u00e9s de c\u00e1lculo de endere\u00e7o"},{"location":"aula9/","text":"Pesquisa bin\u00e1ria Implementar o \"count()\" usando pesquisa bin\u00e1ria. Lembrando que para usar a pesquisa bin\u00e1ria a lista precisa estar ordenada. Pesquisa atrav\u00e9s de c\u00e1lculo de endere\u00e7o Hash; f(elemento) -> endere\u00e7o; Adicionamos esse elemento no endere\u00e7o, e buscamos esse elemento por meio novamente de f(elemento); Para inserir e para buscar o elmenento as opera\u00e7\u00e3o s\u00e3o em tempo constante (\"1 acesso\"); Existe um mapeamento do elemento para um n\u00famero (um endere\u00e7o), e esse endere\u00e7o nos retorna o elemento quando ele \u00e9 buscado; Dicion\u00e1rio d = {1: 10, 2: 5, 'joao': [1, 2, 3]}.","title":"Aula 9 (2019-05-10)"},{"location":"aula9/#pesquisa-binaria","text":"Implementar o \"count()\" usando pesquisa bin\u00e1ria. Lembrando que para usar a pesquisa bin\u00e1ria a lista precisa estar ordenada.","title":"Pesquisa bin\u00e1ria"},{"location":"aula9/#pesquisa-atraves-de-calculo-de-endereco","text":"Hash; f(elemento) -> endere\u00e7o; Adicionamos esse elemento no endere\u00e7o, e buscamos esse elemento por meio novamente de f(elemento); Para inserir e para buscar o elmenento as opera\u00e7\u00e3o s\u00e3o em tempo constante (\"1 acesso\"); Existe um mapeamento do elemento para um n\u00famero (um endere\u00e7o), e esse endere\u00e7o nos retorna o elemento quando ele \u00e9 buscado; Dicion\u00e1rio d = {1: 10, 2: 5, 'joao': [1, 2, 3]}.","title":"Pesquisa atrav\u00e9s de c\u00e1lculo de endere\u00e7o"},{"location":"exercicios1/","text":"Exerc\u00edcio 1.1 Defina uma fun\u00e7\u00e3o chamada max3 que dado 3 n\u00fameros (a, b, c) ela retorne o maior entre eles (sem usar a fun\u00e7\u00e3o max() ). Python # Para testar seu codigo adicione esses codigos no seu c\u00f3digo fonte. retorno = max3 ( 1 , 2 , 3 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 3 assert max3 ( 4 , 2 , 3 ) == 4 assert max3 ( 4 , 5 , 3 ) == 5 assert max3 ( 10 , 5 , 3 ) == 10 assert max3 ( 10 , 5 , 11 ) == 11 print ( 'Tudo certo!!?' ) Exerc\u00edcio 1.2 Fa\u00e7a um fun\u00e7\u00e3o chamada media_pond3 que tenha 3 notas de um aluno e retorne a m\u00e9dia final deste aluno. Considerar que a m\u00e9dia \u00e9 ponderada e que o peso das notas \u00e9: 1, 2 e 3 respectivamente. As notas s\u00e3o passada como argumento respectivamente. Python # Para testar seu codigo adicione esses codigos no seu c\u00f3digo fonte. # Necessario mais testes! retorno = media_pond3 ( 10 , 10 , 10 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 10 assert media_pond3 ( 2 , 2 , 6 ) == 4 print ( 'Tudo certo!!?' ) Exerc\u00edcio 1.2.1 Fa\u00e7a uma fun\u00e7\u00e3o chamada aprovar que retorne Verdadeiro ( True ) ou Falso ( False ) caso o aluno seja aprovado ou reprovado respectivamente, com as mesmas regras do Exerc\u00edcio 1.2, ou seja, a m\u00e9dia \u00e9 ponderada de 3 notas. Fun\u00e7\u00f5es que s\u00f3 retornam True ou False s\u00e3o chamadas de fun\u00e7\u00f5es booleanas . Imprima 'Aprovado' ou 'Reprovado' dentro da fun\u00e7\u00e3o. Para um aluno ser aprovado \u00e9 necess\u00e1rio que ele tenha no m\u00ednimo 6 de nota. \u00c9 completamente v\u00e1lido reusar o c\u00f3digo do Exerc\u00edcio 1.2. Python # Sem testes ainda! Exerc\u00edcio 1.3 Construa uma fun\u00e7\u00e3o dist() que, tendo como dados de entrada dois pontos quaisquer no plano, p(x1,y1) e p(x2,y2), retorne a dist\u00e2ncia entre eles. A ordem dos par\u00e2metros s\u00e3o: x1, y1, x2 e y2. Python # Faca mais testes se voce quiser mais garantia # Preste a atencao na quantidade de parametros e seus respectivos nomes. retorno = dist ( 0 , 0 , 0 , 1 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 1 assert dist ( 0 , 0 , 1 , 0 ) == 1 assert dist ( 0 , 0 , 2 , 0 ) == 2 assert dist ( 0 , 0 , 0 , 3 ) == 3 assert dist ( 1 , 1 , 2 , 1 ) == 1 print ( 'Tudo certo!!?' ) Exerc\u00edcio 1.4 Fa\u00e7a um programa para ler o sal\u00e1rio de um funcion\u00e1rio e aument\u00e1-lo em 15%. Ap\u00f3s o aumento, desconte 8% de impostos. Imprima o sal\u00e1rio inicial, o sal\u00e1rio com o aumento e o sal\u00e1rio final. Exerc\u00edcio 1.4.1 Transforme o programa em uma fun\u00e7\u00e3o salario_liquido , que recebe o sal\u00e1rio como argumento e retorne o sal\u00e1rio l\u00edquido com as regras do exerc\u00f3dio 1.3. Exerc\u00edcio 1.5 Elabore um programa que dada a idade de um nadador classifica-o em uma das seguintes categorias: Infantil A = 5-7 anos Infantil B = 8-10 anos Juvenil A = 11-13 anos Juvenil B = 14-17 anos Adulto = maiores de 18 anos Tamb\u00e9m transforme seu programa em uma fun\u00e7\u00e3o, caso n\u00e3o o tenha feito. Ou seja, sua fun\u00e7\u00e3o ter\u00e1 como par\u00e2metro a idade do nadador e retorna uma string com o nome da categoria do nadador Exerc\u00edcio 1.6 Escreva um programa para contar dinheiro que pergunte, dentro de um monte de dinheiro, qual a quantidade de notas de: 1 real; 2 reais; 5 reais; 10 reais; 50 reais; 100 reais. Em seguida programa imprime qual o valor total em dinheiro. Exemplo: 2 notas de 1 real e 5 notas de 100 reais (entrada) d\u00e3o um total de 502 reais (sa\u00edda). 1.7 Exerc\u00edcio Escreva um programa que fa\u00e7a o inverso da quest\u00e3o anterior, ou seja, solicite ao usu\u00e1rio um valor (total) em dinheiro, e informe quantas notas de: 1 real, 2 reais, 5 reais, 10 reais, 50 reais e 100 reais ser\u00e3o necess\u00e1rias para compor este valor, de forma que seja utilizado o menor n\u00famero de notas poss\u00edvel. Exemplo: 507 reais s\u00e3o 5 notas de 100 reais, 1 nota de 5 reais e 2 notas de 1 real. Bonus: minimize a quantidade de notas. No exemplo anterior poderia-se usar 1 nota de 2 reais ao inv\u00e9s de 2 notas de 1 real. 1.8 Exerc\u00edcio Uma agencia de espionagem encomendou um programa especial para fazer a codifica\u00e7\u00e3o de mensagens. O programa inicialmente l\u00ea a mensagem e codifica da seguinte forma: Considerando os caracteres que comp\u00f5em a mensagem aos pares, cada caractere \u00e9 trocado com o seu vizinho, sempre levando em considera\u00e7\u00e3o que isto \u00e9 feito aos pares,como mostra o exemplo abaixo: mensagem original: 'Esta \u00e9 uma mensagem.'; processo codifica\u00e7\u00e3o: 'E s t a _ \u00e9 _ u m a _ m e n s a g e m .'; (caracteres _ indicam os espa\u00e7os em branco) mensagem codificada: 'sEat\u00e9 u amm neaseg.m'; Se o n\u00famero de caracteres for \u00edmpar, o programa acrescenta um caractere '#' no final antes de realizar a troca dos pares. Exerc\u00edcio 1.9 Considere o c\u00f3digo abaixo e responda as quest\u00f5es: if b1 == True : c1 = True else : if b2 == True : if b3 == True : c2 = True else : c3 = True c4 = True c5 = True Se b1 = True , b2 = True e b3 = False , quais comandos ser\u00e3o executados pelo algoritmo? Se b1 = False , b2 = True e b3 = False , quais comandos ser\u00e3o executados? Se b1 = False , b2 = True e b3 = True , quais comandos ser\u00e3o executados? Quais valores l\u00f3gicos b1, b2 e b3 devem receber para que somente o comando c5 seja executado? Fontes: https://www.ic.unicamp.br/~santanch/teaching/alg/2012-1/exercicios.html ; https://www.inf.pucrs.br/~pinho/LaproI/Exercicios/SeqDecisao/lista1.htm . https://dcc.ufrj.br/~leandro/mat/xbt236/Lista1.pdf ;","title":"Exerc\u00edcios 1"},{"location":"exercicios1/#exercicio-11","text":"Defina uma fun\u00e7\u00e3o chamada max3 que dado 3 n\u00fameros (a, b, c) ela retorne o maior entre eles (sem usar a fun\u00e7\u00e3o max() ). Python # Para testar seu codigo adicione esses codigos no seu c\u00f3digo fonte. retorno = max3 ( 1 , 2 , 3 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 3 assert max3 ( 4 , 2 , 3 ) == 4 assert max3 ( 4 , 5 , 3 ) == 5 assert max3 ( 10 , 5 , 3 ) == 10 assert max3 ( 10 , 5 , 11 ) == 11 print ( 'Tudo certo!!?' )","title":"Exerc\u00edcio 1.1"},{"location":"exercicios1/#exercicio-12","text":"Fa\u00e7a um fun\u00e7\u00e3o chamada media_pond3 que tenha 3 notas de um aluno e retorne a m\u00e9dia final deste aluno. Considerar que a m\u00e9dia \u00e9 ponderada e que o peso das notas \u00e9: 1, 2 e 3 respectivamente. As notas s\u00e3o passada como argumento respectivamente. Python # Para testar seu codigo adicione esses codigos no seu c\u00f3digo fonte. # Necessario mais testes! retorno = media_pond3 ( 10 , 10 , 10 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 10 assert media_pond3 ( 2 , 2 , 6 ) == 4 print ( 'Tudo certo!!?' )","title":"Exerc\u00edcio 1.2"},{"location":"exercicios1/#exercicio-121","text":"Fa\u00e7a uma fun\u00e7\u00e3o chamada aprovar que retorne Verdadeiro ( True ) ou Falso ( False ) caso o aluno seja aprovado ou reprovado respectivamente, com as mesmas regras do Exerc\u00edcio 1.2, ou seja, a m\u00e9dia \u00e9 ponderada de 3 notas. Fun\u00e7\u00f5es que s\u00f3 retornam True ou False s\u00e3o chamadas de fun\u00e7\u00f5es booleanas . Imprima 'Aprovado' ou 'Reprovado' dentro da fun\u00e7\u00e3o. Para um aluno ser aprovado \u00e9 necess\u00e1rio que ele tenha no m\u00ednimo 6 de nota. \u00c9 completamente v\u00e1lido reusar o c\u00f3digo do Exerc\u00edcio 1.2. Python # Sem testes ainda!","title":"Exerc\u00edcio 1.2.1"},{"location":"exercicios1/#exercicio-13","text":"Construa uma fun\u00e7\u00e3o dist() que, tendo como dados de entrada dois pontos quaisquer no plano, p(x1,y1) e p(x2,y2), retorne a dist\u00e2ncia entre eles. A ordem dos par\u00e2metros s\u00e3o: x1, y1, x2 e y2. Python # Faca mais testes se voce quiser mais garantia # Preste a atencao na quantidade de parametros e seus respectivos nomes. retorno = dist ( 0 , 0 , 0 , 1 ) print ( 'Apenas o primeiro retorno:' , retorno ) assert retorno == 1 assert dist ( 0 , 0 , 1 , 0 ) == 1 assert dist ( 0 , 0 , 2 , 0 ) == 2 assert dist ( 0 , 0 , 0 , 3 ) == 3 assert dist ( 1 , 1 , 2 , 1 ) == 1 print ( 'Tudo certo!!?' )","title":"Exerc\u00edcio 1.3"},{"location":"exercicios1/#exercicio-14","text":"Fa\u00e7a um programa para ler o sal\u00e1rio de um funcion\u00e1rio e aument\u00e1-lo em 15%. Ap\u00f3s o aumento, desconte 8% de impostos. Imprima o sal\u00e1rio inicial, o sal\u00e1rio com o aumento e o sal\u00e1rio final.","title":"Exerc\u00edcio 1.4"},{"location":"exercicios1/#exercicio-141","text":"Transforme o programa em uma fun\u00e7\u00e3o salario_liquido , que recebe o sal\u00e1rio como argumento e retorne o sal\u00e1rio l\u00edquido com as regras do exerc\u00f3dio 1.3.","title":"Exerc\u00edcio 1.4.1"},{"location":"exercicios1/#exercicio-15","text":"Elabore um programa que dada a idade de um nadador classifica-o em uma das seguintes categorias: Infantil A = 5-7 anos Infantil B = 8-10 anos Juvenil A = 11-13 anos Juvenil B = 14-17 anos Adulto = maiores de 18 anos Tamb\u00e9m transforme seu programa em uma fun\u00e7\u00e3o, caso n\u00e3o o tenha feito. Ou seja, sua fun\u00e7\u00e3o ter\u00e1 como par\u00e2metro a idade do nadador e retorna uma string com o nome da categoria do nadador","title":"Exerc\u00edcio 1.5"},{"location":"exercicios1/#exercicio-16","text":"Escreva um programa para contar dinheiro que pergunte, dentro de um monte de dinheiro, qual a quantidade de notas de: 1 real; 2 reais; 5 reais; 10 reais; 50 reais; 100 reais. Em seguida programa imprime qual o valor total em dinheiro. Exemplo: 2 notas de 1 real e 5 notas de 100 reais (entrada) d\u00e3o um total de 502 reais (sa\u00edda).","title":"Exerc\u00edcio 1.6"},{"location":"exercicios1/#17-exercicio","text":"Escreva um programa que fa\u00e7a o inverso da quest\u00e3o anterior, ou seja, solicite ao usu\u00e1rio um valor (total) em dinheiro, e informe quantas notas de: 1 real, 2 reais, 5 reais, 10 reais, 50 reais e 100 reais ser\u00e3o necess\u00e1rias para compor este valor, de forma que seja utilizado o menor n\u00famero de notas poss\u00edvel. Exemplo: 507 reais s\u00e3o 5 notas de 100 reais, 1 nota de 5 reais e 2 notas de 1 real. Bonus: minimize a quantidade de notas. No exemplo anterior poderia-se usar 1 nota de 2 reais ao inv\u00e9s de 2 notas de 1 real.","title":"1.7 Exerc\u00edcio"},{"location":"exercicios1/#18-exercicio","text":"Uma agencia de espionagem encomendou um programa especial para fazer a codifica\u00e7\u00e3o de mensagens. O programa inicialmente l\u00ea a mensagem e codifica da seguinte forma: Considerando os caracteres que comp\u00f5em a mensagem aos pares, cada caractere \u00e9 trocado com o seu vizinho, sempre levando em considera\u00e7\u00e3o que isto \u00e9 feito aos pares,como mostra o exemplo abaixo: mensagem original: 'Esta \u00e9 uma mensagem.'; processo codifica\u00e7\u00e3o: 'E s t a _ \u00e9 _ u m a _ m e n s a g e m .'; (caracteres _ indicam os espa\u00e7os em branco) mensagem codificada: 'sEat\u00e9 u amm neaseg.m'; Se o n\u00famero de caracteres for \u00edmpar, o programa acrescenta um caractere '#' no final antes de realizar a troca dos pares.","title":"1.8 Exerc\u00edcio"},{"location":"exercicios1/#exercicio-19","text":"Considere o c\u00f3digo abaixo e responda as quest\u00f5es: if b1 == True : c1 = True else : if b2 == True : if b3 == True : c2 = True else : c3 = True c4 = True c5 = True Se b1 = True , b2 = True e b3 = False , quais comandos ser\u00e3o executados pelo algoritmo? Se b1 = False , b2 = True e b3 = False , quais comandos ser\u00e3o executados? Se b1 = False , b2 = True e b3 = True , quais comandos ser\u00e3o executados? Quais valores l\u00f3gicos b1, b2 e b3 devem receber para que somente o comando c5 seja executado?","title":"Exerc\u00edcio 1.9"},{"location":"exercicios1/#fontes","text":"https://www.ic.unicamp.br/~santanch/teaching/alg/2012-1/exercicios.html ; https://www.inf.pucrs.br/~pinho/LaproI/Exercicios/SeqDecisao/lista1.htm . https://dcc.ufrj.br/~leandro/mat/xbt236/Lista1.pdf ;","title":"Fontes:"},{"location":"exercicios2/","text":"2.1 Fa\u00e7a um programa que pe\u00e7a uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inv\u00e1lido e continue pedindo at\u00e9 que o usu\u00e1rio informe um valor v\u00e1lido. 2.2 Fa\u00e7a um programa que leia um nome de usu\u00e1rio e a sua senha e n\u00e3o aceite a senha igual ao nome do usu\u00e1rio, mostrando uma mensagem de erro e voltando a pedir as informa\u00e7\u00f5es. 2.3 Supondo que a popula\u00e7\u00e3o de um pa\u00eds A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a popula\u00e7\u00e3o de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Fa\u00e7a um programa que calcule e escreva o n\u00famero de anos necess\u00e1rios para que a popula\u00e7\u00e3o do pa\u00eds A ultrapasse ou iguale a popula\u00e7\u00e3o do pa\u00eds B, mantidas as taxas de crescimento. 2.3.1 Altere o programa anterior (2.3) permitindo ao usu\u00e1rio informar as popula\u00e7\u00f5es e as taxas de crescimento iniciais. Valide a entrada e permita repetir a opera\u00e7\u00e3o. 2.4 Fa\u00e7a um programa que imprima na tela os n\u00fameros de 1 a 20, um abaixo do outro. Depois modifique o programa para que ele mostre os n\u00fameros um ao lado do outro. 2.5 Fa\u00e7a um programa que leia 5 n\u00fameros (usando estruturas de repeti\u00e7\u00e3o) e informe o maior n\u00famero. 2.6 Implemente o m\u00e9todo \"reverse()\" da lista ( list.reverse() ). Defina uma fun\u00e7\u00e3o chamada inverter. 2.6.1 Caso tenha feito o \"reverse()\" com lista auxiliar (uma nova lista para ajudar voc\u00ea resolver o problema), tente fazer o reverse sem criar listas auxiliares para economizar mem\u00f3ria RAM. 2.7 Fa\u00e7a um programa que receba o valor de uma d\u00edvida e mostre uma tabela com os seguintes dados: valor da d\u00edvida, valor dos juros, quantidade de parcelas e valor da parcela. Os juros e a quantidade de parcelas seguem a tabela abaixo: Quantidade de Parcelas % de Juros sobre o valor inicial da d\u00edvida 1 0 3 10 6 15 9 20 12 25 Exemplo de sa\u00edda do programa: Valor da D\u00edvida Valor dos Juros Quantidade de Parcelas Valor da Parcela R$ 1.000,00 0 1 R$ 1.000,00 R$ 1.100,00 100 3 R$ 366,00 R$ 1.150,00 150 6 R$ 191,67 2.8 Fa\u00e7a um programa para imprimir: 1 2 2 3 3 3 ..... n n n n n n ... n Para um n informado pelo usu\u00e1rio. Use uma fun\u00e7\u00e3o que receba um valor n inteiro e imprima at\u00e9 a n-\u00e9sima linha. 2.9 Fa\u00e7a um programa para imprimir: 1 1 2 1 2 3 ..... 1 2 3 ... n Para um n informado pelo usu\u00e1rio. Use uma fun\u00e7\u00e3o que receba um valor n inteiro e imprima at\u00e9 a n-\u00e9sima linha. 2.10 Fa\u00e7a um programa, com uma fun\u00e7\u00e3o que necessite de tr\u00eas argumentos, e que forne\u00e7a a soma desses tr\u00eas argumentos. 2.11 Reverso do n\u00famero. Fa\u00e7a uma fun\u00e7\u00e3o que retorne o reverso de um n\u00famero inteiro informado. Por exemplo: 127 -> 721. 2.12 Fa\u00e7a uma fun\u00e7\u00e3o que informe a quantidade de d\u00edgitos de um determinado n\u00famero inteiro informado. 2.13 Fa\u00e7a um Programa que pe\u00e7a a idade e a altura de 5 pessoas, armazene cada informa\u00e7\u00e3o no seu respectivo vetor. Imprima a idade e a altura na ordem inversa a ordem lida. 2.14 Fontes https://wiki.python.org.br/EstruturaDeRepeticao ; https://wiki.python.org.br/ExerciciosFuncoes ; https://wiki.python.org.br/ExerciciosListas .","title":"Exerc\u00edcios 2"},{"location":"exercicios2/#21","text":"Fa\u00e7a um programa que pe\u00e7a uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inv\u00e1lido e continue pedindo at\u00e9 que o usu\u00e1rio informe um valor v\u00e1lido.","title":"2.1"},{"location":"exercicios2/#22","text":"Fa\u00e7a um programa que leia um nome de usu\u00e1rio e a sua senha e n\u00e3o aceite a senha igual ao nome do usu\u00e1rio, mostrando uma mensagem de erro e voltando a pedir as informa\u00e7\u00f5es.","title":"2.2"},{"location":"exercicios2/#23","text":"Supondo que a popula\u00e7\u00e3o de um pa\u00eds A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a popula\u00e7\u00e3o de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Fa\u00e7a um programa que calcule e escreva o n\u00famero de anos necess\u00e1rios para que a popula\u00e7\u00e3o do pa\u00eds A ultrapasse ou iguale a popula\u00e7\u00e3o do pa\u00eds B, mantidas as taxas de crescimento.","title":"2.3"},{"location":"exercicios2/#231","text":"Altere o programa anterior (2.3) permitindo ao usu\u00e1rio informar as popula\u00e7\u00f5es e as taxas de crescimento iniciais. Valide a entrada e permita repetir a opera\u00e7\u00e3o.","title":"2.3.1"},{"location":"exercicios2/#24","text":"Fa\u00e7a um programa que imprima na tela os n\u00fameros de 1 a 20, um abaixo do outro. Depois modifique o programa para que ele mostre os n\u00fameros um ao lado do outro.","title":"2.4"},{"location":"exercicios2/#25","text":"Fa\u00e7a um programa que leia 5 n\u00fameros (usando estruturas de repeti\u00e7\u00e3o) e informe o maior n\u00famero.","title":"2.5"},{"location":"exercicios2/#26","text":"Implemente o m\u00e9todo \"reverse()\" da lista ( list.reverse() ). Defina uma fun\u00e7\u00e3o chamada inverter.","title":"2.6"},{"location":"exercicios2/#261","text":"Caso tenha feito o \"reverse()\" com lista auxiliar (uma nova lista para ajudar voc\u00ea resolver o problema), tente fazer o reverse sem criar listas auxiliares para economizar mem\u00f3ria RAM.","title":"2.6.1"},{"location":"exercicios2/#27","text":"Fa\u00e7a um programa que receba o valor de uma d\u00edvida e mostre uma tabela com os seguintes dados: valor da d\u00edvida, valor dos juros, quantidade de parcelas e valor da parcela. Os juros e a quantidade de parcelas seguem a tabela abaixo: Quantidade de Parcelas % de Juros sobre o valor inicial da d\u00edvida 1 0 3 10 6 15 9 20 12 25 Exemplo de sa\u00edda do programa: Valor da D\u00edvida Valor dos Juros Quantidade de Parcelas Valor da Parcela R$ 1.000,00 0 1 R$ 1.000,00 R$ 1.100,00 100 3 R$ 366,00 R$ 1.150,00 150 6 R$ 191,67","title":"2.7"},{"location":"exercicios2/#28","text":"Fa\u00e7a um programa para imprimir: 1 2 2 3 3 3 ..... n n n n n n ... n Para um n informado pelo usu\u00e1rio. Use uma fun\u00e7\u00e3o que receba um valor n inteiro e imprima at\u00e9 a n-\u00e9sima linha.","title":"2.8"},{"location":"exercicios2/#29","text":"Fa\u00e7a um programa para imprimir: 1 1 2 1 2 3 ..... 1 2 3 ... n Para um n informado pelo usu\u00e1rio. Use uma fun\u00e7\u00e3o que receba um valor n inteiro e imprima at\u00e9 a n-\u00e9sima linha.","title":"2.9"},{"location":"exercicios2/#210","text":"Fa\u00e7a um programa, com uma fun\u00e7\u00e3o que necessite de tr\u00eas argumentos, e que forne\u00e7a a soma desses tr\u00eas argumentos.","title":"2.10"},{"location":"exercicios2/#211","text":"Reverso do n\u00famero. Fa\u00e7a uma fun\u00e7\u00e3o que retorne o reverso de um n\u00famero inteiro informado. Por exemplo: 127 -> 721.","title":"2.11"},{"location":"exercicios2/#212","text":"Fa\u00e7a uma fun\u00e7\u00e3o que informe a quantidade de d\u00edgitos de um determinado n\u00famero inteiro informado.","title":"2.12"},{"location":"exercicios2/#213","text":"Fa\u00e7a um Programa que pe\u00e7a a idade e a altura de 5 pessoas, armazene cada informa\u00e7\u00e3o no seu respectivo vetor. Imprima a idade e a altura na ordem inversa a ordem lida.","title":"2.13"},{"location":"exercicios2/#214","text":"","title":"2.14"},{"location":"exercicios2/#fontes","text":"https://wiki.python.org.br/EstruturaDeRepeticao ; https://wiki.python.org.br/ExerciciosFuncoes ; https://wiki.python.org.br/ExerciciosListas .","title":"Fontes"},{"location":"exercicios3/","text":"3.1 Modifique a busca bin\u00e1ria para ao inv\u00e9s de retornar verdadeiro ou falso caso ache o elemento de busca, retorne uma lista vazia caso n\u00e3o encontre; caso encontre retorne os elementos repetidos desse elemento na lista. 3.2 Retorno o elemento n da sequ\u00eancia Fibonacci. Ou seja, fa\u00e7a uma fun\u00e7\u00e3o que retorne o n-\u00e9simo termo da sequ\u00eancia de Fibonacci. Python def fib ( n ): RETORNE O ELEMENTO N 3.3 Fa\u00e7a uma fun\u00e7\u00e3o recursiva para retornar a soma dos digitos de um dado n\u00famero: sum_digits(345) = 12 sum_digits(45) = 9 Caso queira, fa\u00e7a a vers\u00e3o iterativa primeiro. 3.4 Dada duas listas, uma contendo nomes , e outra contendo n\u00fameros de telefone . Mantenha a lista consistente ao usar as opera\u00e7\u00f5es de adicionar, ler, modificar e excluir; Para isso um usu\u00e1rio da aplica\u00e7\u00e3o pode adicionar nomes e n\u00fameros de telefones respectivos. Ou seja, adiciona-se primeiro um nome de pessoa para depois adicionar um numero dessa pessoa; O usu\u00e1rio pode buscar (ler) por nome o n\u00famero da pessoa, e tamb\u00e9m pode buscar por telefone o nome da pessoa; Pode modificar e excluir tamb\u00e9m por nome ou n\u00famero; Caso n\u00e3o encontre nome/n\u00famero, mensagens devem indicar esses problemas ao usu\u00e1rio da aplica\u00e7\u00e3o; O usu\u00e1rio pode pedir para mostrar toda a lista de telefones e nomes.","title":"Exerc\u00edcios 3"},{"location":"exercicios3/#31","text":"Modifique a busca bin\u00e1ria para ao inv\u00e9s de retornar verdadeiro ou falso caso ache o elemento de busca, retorne uma lista vazia caso n\u00e3o encontre; caso encontre retorne os elementos repetidos desse elemento na lista.","title":"3.1"},{"location":"exercicios3/#32","text":"Retorno o elemento n da sequ\u00eancia Fibonacci. Ou seja, fa\u00e7a uma fun\u00e7\u00e3o que retorne o n-\u00e9simo termo da sequ\u00eancia de Fibonacci. Python def fib ( n ): RETORNE O ELEMENTO N","title":"3.2"},{"location":"exercicios3/#33","text":"Fa\u00e7a uma fun\u00e7\u00e3o recursiva para retornar a soma dos digitos de um dado n\u00famero: sum_digits(345) = 12 sum_digits(45) = 9 Caso queira, fa\u00e7a a vers\u00e3o iterativa primeiro.","title":"3.3"},{"location":"exercicios3/#34","text":"Dada duas listas, uma contendo nomes , e outra contendo n\u00fameros de telefone . Mantenha a lista consistente ao usar as opera\u00e7\u00f5es de adicionar, ler, modificar e excluir; Para isso um usu\u00e1rio da aplica\u00e7\u00e3o pode adicionar nomes e n\u00fameros de telefones respectivos. Ou seja, adiciona-se primeiro um nome de pessoa para depois adicionar um numero dessa pessoa; O usu\u00e1rio pode buscar (ler) por nome o n\u00famero da pessoa, e tamb\u00e9m pode buscar por telefone o nome da pessoa; Pode modificar e excluir tamb\u00e9m por nome ou n\u00famero; Caso n\u00e3o encontre nome/n\u00famero, mensagens devem indicar esses problemas ao usu\u00e1rio da aplica\u00e7\u00e3o; O usu\u00e1rio pode pedir para mostrar toda a lista de telefones e nomes.","title":"3.4"},{"location":"exercicios4/","text":"4.1 Escreva uma fun\u00e7\u00e3o que conte o n\u00famero de c\u00e9lulas de uma lista encadeada (ligada). Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva. 4.2 Altura. A altura de uma c\u00e9lula c em uma lista encadeada \u00e9 a dist\u00e2ncia entre c e o fim da lista. Mais precisamente, a altura de c \u00e9 o n\u00famero de passos do caminho que leva de c at\u00e9 a \u00faltima c\u00e9lula da lista. Escreva uma fun\u00e7\u00e3o que calcule a altura de uma dada c\u00e9lula. Celula pode ser o valor de um elemento da lista. 4.3 Profundidade. A profundidade de uma c\u00e9lula c em uma lista encadeada \u00e9 o n\u00famero de passos do \u00fanico caminho que vai da primeira c\u00e9lula da lista at\u00e9 c. Escreva uma fun\u00e7\u00e3o que calcule a profundidade de uma dada c\u00e9lula. Celula pode ser o valor de um elemento da lista. 4.4 Escreva uma fun\u00e7\u00e3o que verifique se uma lista encadeada que cont\u00e9m n\u00fameros inteiros est\u00e1 em ordem crescente. 4.5 Escreva uma fun\u00e7\u00e3o que fa\u00e7a uma busca em uma lista encadeada crescente . Fa\u00e7a vers\u00f5es recursiva e iterativa. Lembra-se que se existe uma ordem, n\u00e3o \u00e9 preciso buscar na lista inteira um valor. 4.6 Escreva uma fun\u00e7\u00e3o que encontre uma c\u00e9lula (valor) com conte\u00fado m\u00ednimo. Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva. min(1, 2, 0, 4) = 0 4.7 Escreva uma fun\u00e7\u00e3o que verifique se duas listas encadeadas s\u00e3o iguais, ou melhor, se t\u00eam o mesmo conte\u00fado. Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva. 4.8 Escreva uma fun\u00e7\u00e3o que fa\u00e7a uma c\u00f3pia de uma lista encadeada. Fa\u00e7a duas vers\u00f5es da fun\u00e7\u00e3o: uma iterativa e uma recursiva. Fonte: https://www.ime.usp.br/~pf/algoritmos/aulas/lista.html","title":"Exerc\u00edcios 4"},{"location":"exercicios4/#41","text":"Escreva uma fun\u00e7\u00e3o que conte o n\u00famero de c\u00e9lulas de uma lista encadeada (ligada). Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva.","title":"4.1"},{"location":"exercicios4/#42","text":"Altura. A altura de uma c\u00e9lula c em uma lista encadeada \u00e9 a dist\u00e2ncia entre c e o fim da lista. Mais precisamente, a altura de c \u00e9 o n\u00famero de passos do caminho que leva de c at\u00e9 a \u00faltima c\u00e9lula da lista. Escreva uma fun\u00e7\u00e3o que calcule a altura de uma dada c\u00e9lula. Celula pode ser o valor de um elemento da lista.","title":"4.2"},{"location":"exercicios4/#43","text":"Profundidade. A profundidade de uma c\u00e9lula c em uma lista encadeada \u00e9 o n\u00famero de passos do \u00fanico caminho que vai da primeira c\u00e9lula da lista at\u00e9 c. Escreva uma fun\u00e7\u00e3o que calcule a profundidade de uma dada c\u00e9lula. Celula pode ser o valor de um elemento da lista.","title":"4.3"},{"location":"exercicios4/#44","text":"Escreva uma fun\u00e7\u00e3o que verifique se uma lista encadeada que cont\u00e9m n\u00fameros inteiros est\u00e1 em ordem crescente.","title":"4.4"},{"location":"exercicios4/#45","text":"Escreva uma fun\u00e7\u00e3o que fa\u00e7a uma busca em uma lista encadeada crescente . Fa\u00e7a vers\u00f5es recursiva e iterativa. Lembra-se que se existe uma ordem, n\u00e3o \u00e9 preciso buscar na lista inteira um valor.","title":"4.5"},{"location":"exercicios4/#46","text":"Escreva uma fun\u00e7\u00e3o que encontre uma c\u00e9lula (valor) com conte\u00fado m\u00ednimo. Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva. min(1, 2, 0, 4) = 0","title":"4.6"},{"location":"exercicios4/#47","text":"Escreva uma fun\u00e7\u00e3o que verifique se duas listas encadeadas s\u00e3o iguais, ou melhor, se t\u00eam o mesmo conte\u00fado. Fa\u00e7a duas vers\u00f5es: uma iterativa e uma recursiva.","title":"4.7"},{"location":"exercicios4/#48","text":"Escreva uma fun\u00e7\u00e3o que fa\u00e7a uma c\u00f3pia de uma lista encadeada. Fa\u00e7a duas vers\u00f5es da fun\u00e7\u00e3o: uma iterativa e uma recursiva.","title":"4.8"},{"location":"exercicios4/#fonte","text":"https://www.ime.usp.br/~pf/algoritmos/aulas/lista.html","title":"Fonte:"},{"location":"exercicios5/","text":"5.1 Utilizando somente opera\u00e7\u00f5es de empilhar e desempilhar, escreva um programa que remove um item com chave c fornecida pelo usu\u00e1rio da pilha. Ao final da execu\u00e7\u00e3o da fun\u00e7\u00e3o, a pilha deve ser igual \u00e0 original, exceto pela aus\u00eancia do item removido. 5.2 Suponha que um dado problema requer o uso de duas pilhas, onde cada pilha suporta no m\u00e1ximo 50 elementos e em nenhum momento as duas pilhas ter\u00e3o juntas mais do que 80 elementos. Assim, \u00e9 poss\u00edvel implementar as duas pilhas em um \u00fanico vetor usando apenas 80 posi\u00e7\u00f5es ao inv\u00e9s de 100. Implemente a estrutura de dados e as de empilhar e desempilhar para estas duas pilhas. 5.3 Escreva um programa solicite ao usu\u00e1rio uma sequ\u00eancia de caracteres sem limite de m\u00e1ximo de tamanho e realize as seguintes opera\u00e7\u00f5es usando uma pilha: a) Imprimir o texto na ordem inversa; b) Verificar se o texto \u00e9 um pal\u00edndromo, ou seja, se a string \u00e9 escrita da mesma maneira de frente para tr\u00e1s e de tr\u00e1s para frente. Ignore espa\u00e7os e pontos. 5.4 Escreva um programa que simule o controle de uma pista de decolagem de avi\u00f5es em um aeroporto. Neste programa, o usu\u00e1rio deve ser capaz de realizar as seguintes tarefas: a) Listar o n\u00famero de avi\u00f5es aguardando na fila de decolagem; b) Autorizar a decolagem do primeiro avi\u00e3o da fila; c) Adicionar um avi\u00e3o \u00e0 fila de espera; d) Listar todos os avi\u00f5es na fila de espera; e) Listar as caracter\u00edsticas do primeiro avi\u00e3o da fila. Considere que os avi\u00f5es possuem um nome e um n\u00famero inteiro como identificador. Adicione outras caracter\u00edsticas conforme achar necess\u00e1rio. 5.5 Utilizando uma pilha, escreva um m\u00e9todo que receba um n\u00famero inteiro positivo no formato decimal e converte este n\u00famero para o formato bin\u00e1rio. Exemplos: 5 \u2192 101 13 \u2192 1101 1 \u2192 1 5.6 Escreva uma fun\u00e7\u00e3o que receba duas Listas (L1 e L2), intercale-as gerando uma terceira Lista, L3. 5.7 Considere uma pilha P vazia e uma fila F n\u00e3o vazia. Utilizando apenas os testes de fila e pilha vazias, as opera\u00e7\u00f5es Enfileira, Desenfileira, Empilha, Desempilha, e uma vari\u00e1vel Aux, escreva uma fun\u00e7\u00e3o que inverta a ordem dos elementos da fila. 5.8 Que conjunto de condi\u00e7\u00f5es \u00e9 necess\u00e1rio e suficiente para que uma sequ\u00eancia de opera\u00e7\u00f5es de Enfileira e Desenfileira sobre uma \u00fanica fila vazia deixa a fila vazia sem provocar underflow (tentativa de executar Desenfileira com a fila vazia)? 5.9 Considere a exist\u00eancia de uma pilha e de uma fila. Escreva um procedimento que, atrav\u00e9s do menu abaixo, identifique qual a tarefa a ser executada: Ler um valor. Se for positivo, inserir na pilha, caso contr\u00e1rio, inserir na fila; Remover um elemento da pilha e colocar na fila; Remover um elemento da fila e colocar na pilha. 5.10 Implemente um programa que contemple uma fila de contatos para um call center. As op\u00e7\u00f5es do programa devem ser: Inserir Contato: deve solicitar ao usu\u00e1rio os dados e incluir o contato na fila; Pr\u00f3ximo Contato: Dever\u00e1 pegar o Contato do Inicio da Fila, remov\u00ea-lo e mostrar os seus dados na tela para o usu\u00e1rio efetuar o contato com o cliente; Sair. Refer\u00eancias https://www.ic.unicamp.br/~ra144681/courses/mc202/slides/files/Lista02-Listas_Pilhas_Filas.pdf https://edisciplinas.usp.br/pluginfile.php/394103/mod_resource/content/1/Exercicios%20-%20Listas%2C%20pilhas%20e%20filas.pdf http://www.decom.ufop.br/menotti/edI101/listas/lista-Fila.pdf http://www.inf.ufrgs.br/~galante/wiki/lib/exe/fetch.php?id=inf01203&cache=cache&media=filas.pdf http://docente.ifsc.edu.br/vilson.junior/ed/04_Listas_Filas_Pilhas.pdf","title":"Exerc\u00edcios 5"},{"location":"exercicios5/#51","text":"Utilizando somente opera\u00e7\u00f5es de empilhar e desempilhar, escreva um programa que remove um item com chave c fornecida pelo usu\u00e1rio da pilha. Ao final da execu\u00e7\u00e3o da fun\u00e7\u00e3o, a pilha deve ser igual \u00e0 original, exceto pela aus\u00eancia do item removido.","title":"5.1"},{"location":"exercicios5/#52","text":"Suponha que um dado problema requer o uso de duas pilhas, onde cada pilha suporta no m\u00e1ximo 50 elementos e em nenhum momento as duas pilhas ter\u00e3o juntas mais do que 80 elementos. Assim, \u00e9 poss\u00edvel implementar as duas pilhas em um \u00fanico vetor usando apenas 80 posi\u00e7\u00f5es ao inv\u00e9s de 100. Implemente a estrutura de dados e as de empilhar e desempilhar para estas duas pilhas.","title":"5.2"},{"location":"exercicios5/#53","text":"Escreva um programa solicite ao usu\u00e1rio uma sequ\u00eancia de caracteres sem limite de m\u00e1ximo de tamanho e realize as seguintes opera\u00e7\u00f5es usando uma pilha: a) Imprimir o texto na ordem inversa; b) Verificar se o texto \u00e9 um pal\u00edndromo, ou seja, se a string \u00e9 escrita da mesma maneira de frente para tr\u00e1s e de tr\u00e1s para frente. Ignore espa\u00e7os e pontos.","title":"5.3"},{"location":"exercicios5/#54","text":"Escreva um programa que simule o controle de uma pista de decolagem de avi\u00f5es em um aeroporto. Neste programa, o usu\u00e1rio deve ser capaz de realizar as seguintes tarefas: a) Listar o n\u00famero de avi\u00f5es aguardando na fila de decolagem; b) Autorizar a decolagem do primeiro avi\u00e3o da fila; c) Adicionar um avi\u00e3o \u00e0 fila de espera; d) Listar todos os avi\u00f5es na fila de espera; e) Listar as caracter\u00edsticas do primeiro avi\u00e3o da fila. Considere que os avi\u00f5es possuem um nome e um n\u00famero inteiro como identificador. Adicione outras caracter\u00edsticas conforme achar necess\u00e1rio.","title":"5.4"},{"location":"exercicios5/#55","text":"Utilizando uma pilha, escreva um m\u00e9todo que receba um n\u00famero inteiro positivo no formato decimal e converte este n\u00famero para o formato bin\u00e1rio. Exemplos: 5 \u2192 101 13 \u2192 1101 1 \u2192 1","title":"5.5"},{"location":"exercicios5/#56","text":"Escreva uma fun\u00e7\u00e3o que receba duas Listas (L1 e L2), intercale-as gerando uma terceira Lista, L3.","title":"5.6"},{"location":"exercicios5/#57","text":"Considere uma pilha P vazia e uma fila F n\u00e3o vazia. Utilizando apenas os testes de fila e pilha vazias, as opera\u00e7\u00f5es Enfileira, Desenfileira, Empilha, Desempilha, e uma vari\u00e1vel Aux, escreva uma fun\u00e7\u00e3o que inverta a ordem dos elementos da fila.","title":"5.7"},{"location":"exercicios5/#58","text":"Que conjunto de condi\u00e7\u00f5es \u00e9 necess\u00e1rio e suficiente para que uma sequ\u00eancia de opera\u00e7\u00f5es de Enfileira e Desenfileira sobre uma \u00fanica fila vazia deixa a fila vazia sem provocar underflow (tentativa de executar Desenfileira com a fila vazia)?","title":"5.8"},{"location":"exercicios5/#59","text":"Considere a exist\u00eancia de uma pilha e de uma fila. Escreva um procedimento que, atrav\u00e9s do menu abaixo, identifique qual a tarefa a ser executada: Ler um valor. Se for positivo, inserir na pilha, caso contr\u00e1rio, inserir na fila; Remover um elemento da pilha e colocar na fila; Remover um elemento da fila e colocar na pilha.","title":"5.9"},{"location":"exercicios5/#510","text":"Implemente um programa que contemple uma fila de contatos para um call center. As op\u00e7\u00f5es do programa devem ser: Inserir Contato: deve solicitar ao usu\u00e1rio os dados e incluir o contato na fila; Pr\u00f3ximo Contato: Dever\u00e1 pegar o Contato do Inicio da Fila, remov\u00ea-lo e mostrar os seus dados na tela para o usu\u00e1rio efetuar o contato com o cliente; Sair.","title":"5.10"},{"location":"exercicios5/#referencias","text":"https://www.ic.unicamp.br/~ra144681/courses/mc202/slides/files/Lista02-Listas_Pilhas_Filas.pdf https://edisciplinas.usp.br/pluginfile.php/394103/mod_resource/content/1/Exercicios%20-%20Listas%2C%20pilhas%20e%20filas.pdf http://www.decom.ufop.br/menotti/edI101/listas/lista-Fila.pdf http://www.inf.ufrgs.br/~galante/wiki/lib/exe/fetch.php?id=inf01203&cache=cache&media=filas.pdf http://docente.ifsc.edu.br/vilson.junior/ed/04_Listas_Filas_Pilhas.pdf","title":"Refer\u00eancias"},{"location":"for/","text":"# For simples. elementos = [ 'a' , 'b' , 'c' , 'd' ] for elemento in elementos : print ( elemento ) a b c d # For com a funcao range(). for i in range ( 5 ): print ( i ) 0 1 2 3 4 # For aninhado. n = m = 3 for i in range ( n ): for j in range ( m ): print ( 'i, j: ' , i , ', ' , j , sep = '' ) # print(f'i, j: {i}, {j}') i , j : 0 , 0 i , j : 0 , 1 i , j : 0 , 2 i , j : 1 , 0 i , j : 1 , 1 i , j : 1 , 2 i , j : 2 , 0 i , j : 2 , 1 i , j : 2 , 2 # For com \"IF\". n , m = 4 , 6 # n = 4 e m = 6 for i in range ( n ): for j in range ( m ): if i == j : print ( 'i, j: ' , i , ', ' , j , sep = '' ) # print(f'i, j: {i}, {j}') i , j : 0 , 0 i , j : 1 , 1 i , j : 2 , 2 # Elementos \"enumerados\" usando a funcao \"enumerate()\". # Similar a usar \"range()\". elementos = [ 'a' , 'b' , 'c' , 'd' ] for i , elemento in enumerate ( elementos ): print ( f 'Elemento {i}: {elemento}' ) Elemento 0 : a Elemento 1 : b Elemento 2 : c Elemento 3 : d # Elementos iniciando em 1. for i , elemento in enumerate ( elementos , 1 ): print ( f 'Elemento {i}: {elemento}' ) Elemento 1 : a Elemento 2 : b Elemento 3 : c Elemento 4 : d","title":"FOR"},{"location":"trabalho1/","text":"Entrega Enviar para afsantos2@uem.br com t\u00edtulo (assunto): ED 4553 T31 - Nome1 RA1 Nome2 RA2 . Primeira metade Lista de Exerc\u00edcios 1 1.6, 1.7 (sem bonus) e 1.8 Lista de Exerc\u00edcios 2 2.7, 2.9, 2.11 e 2.12 Lista de Exerc\u00edcios 3 3.3 (vers\u00e3o recursiva) Segunda metade Lista duplamente ligada Implementar opera\u00e7\u00f5es de lista duplamente ligadas : Inserir (in\u00edcio, fim), remover, alterar, buscar e um m\u00e9todo de \"print_()\" Inserir n\u00e3o precisa retornar nada; Remover retorna True ou False ; Alterar retorna True ou False ; Buscar retorna posi\u00e7\u00e3o ou False .","title":"Trabalho 1"},{"location":"trabalho1/#entrega","text":"Enviar para afsantos2@uem.br com t\u00edtulo (assunto): ED 4553 T31 - Nome1 RA1 Nome2 RA2 .","title":"Entrega"},{"location":"trabalho1/#primeira-metade","text":"","title":"Primeira metade"},{"location":"trabalho1/#lista-de-exercicios-1","text":"1.6, 1.7 (sem bonus) e 1.8","title":"Lista de Exerc\u00edcios 1"},{"location":"trabalho1/#lista-de-exercicios-2","text":"2.7, 2.9, 2.11 e 2.12","title":"Lista de Exerc\u00edcios 2"},{"location":"trabalho1/#lista-de-exercicios-3","text":"3.3 (vers\u00e3o recursiva)","title":"Lista de Exerc\u00edcios 3"},{"location":"trabalho1/#segunda-metade","text":"","title":"Segunda metade"},{"location":"trabalho1/#lista-duplamente-ligada","text":"Implementar opera\u00e7\u00f5es de lista duplamente ligadas : Inserir (in\u00edcio, fim), remover, alterar, buscar e um m\u00e9todo de \"print_()\" Inserir n\u00e3o precisa retornar nada; Remover retorna True ou False ; Alterar retorna True ou False ; Buscar retorna posi\u00e7\u00e3o ou False .","title":"Lista duplamente ligada"}]}